Nonterminals useless in grammar

   integer_expression


Terminals unused in grammar

   KWDEF
   KWFALSSE
   OCTAL


Rules useless in grammar

   98 integer_expression: INTEGER MULTIPLY INTEGER
   99                   | INTEGER DIVIDE INTEGER
  100                   | INTEGER MOD INTEGER
  101                   | INTEGER PLUS INTEGER
  102                   | INTEGER MINUS INTEGER
  103                   | INTEGER
  104                   | IDENT


State 5 conflicts: 1 shift/reduce
State 6 conflicts: 1 reduce/reduce
State 8 conflicts: 1 shift/reduce
State 23 conflicts: 1 reduce/reduce
State 26 conflicts: 1 reduce/reduce
State 27 conflicts: 1 shift/reduce
State 47 conflicts: 8 shift/reduce, 1 reduce/reduce
State 52 conflicts: 1 reduce/reduce
State 81 conflicts: 1 reduce/reduce
State 93 conflicts: 1 reduce/reduce
State 135 conflicts: 8 shift/reduce, 1 reduce/reduce
State 136 conflicts: 8 shift/reduce, 1 reduce/reduce
State 142 conflicts: 1 shift/reduce
State 166 conflicts: 1 shift/reduce
State 170 conflicts: 1 shift/reduce
State 175 conflicts: 8 shift/reduce, 1 reduce/reduce
State 190 conflicts: 8 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: programname SEMICOLON programbody KWEND IDENT

    2 programname: IDENT

    3 programbody: var_const_decl_list func_decl_list compound_statement

    4 var_const_decl_list: var_const_decl_list var_const_decl
    5                    | var_const_decl
    6                    | epsilon

    7 var_const_decl: var_decl
    8               | array_decl
    9               | const_decl

   10 func_decl_list: func_decl_list func_decl
   11               | func_decl
   12               | epsilon

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT

   14 arg_lists: arg
   15          | arg_lists SEMICOLON arg
   16          | epsilon

   17 arg: identifier_list COLON var_type
   18    | identifier_list COLON array_decl

   19 identifier_list: IDENT COMMA identifier_list
   20                | IDENT
   21                | epsilon
   22                | %empty

   23 func_type: COLON KWINTEGER
   24          | COLON KWREAL
   25          | COLON KWBOOLEAN
   26          | COLON KWSTRING
   27          | COLON KWARRAY array_dimension_decl var_type
   28          | epsilon

   29 var_decl: KWVAR identifier_list COLON var_type SEMICOLON

   30 var_type: KWINTEGER
   31         | KWREAL
   32         | KWSTRING
   33         | KWARRAY
   34         | KWBOOLEAN
   35         | %empty

   36 array_decl: KWVAR identifier_list COLON KWARRAY array_dimension_decl var_type SEMICOLON

   37 array_dimension_decl: array_dimension_decl INTEGER KWTO INTEGER KWOF more_array_or_not
   38                     | INTEGER KWTO INTEGER KWOF more_array_or_not

   39 more_array_or_not: KWARRAY
   40                  | epsilon

   41 const_decl: KWVAR identifier_list COLON literal_constant_list SEMICOLON

   42 literal_constant_list: INTEGER
   43                      | REAL
   44                      | STRING
   45                      | KWTRUE
   46                      | KWFALSE

   47 statement_list: statement_list statement
   48               | statement
   49               | epsilon

   50 statement: compound_statement
   51          | simple_statement SEMICOLON
   52          | conditional_statement
   53          | while_statement
   54          | for_statement
   55          | return_statement SEMICOLON
   56          | function_invocation_statement SEMICOLON

   57 compound_statement: KWBEGIN var_const_decl_list statement_list KWEND

   58 simple_statement: variable_reference ASSIGN expression_list
   59                 | %empty
   60                 | KWPRINT variable_reference
   61                 | KWPRINT expression
   62                 | KWREAD variable_reference

   63 variable_reference: IDENT
   64                   | IDENT BRACKETLEFT expression BRACKETRIGHT array_extend

   65 array_extend: BRACKETLEFT expression BRACKETRIGHT
   66             | array_extend BRACKETLEFT expression BRACKETRIGHT
   67             | epsilon

   68 expression: MINUS expression
   69           | BRACELEFT expression BRACERIGHT
   70           | literal_constant_list
   71           | variable_reference
   72           | function_invocation_statement
   73           | expression MULTIPLY expression
   74           | expression DIVIDE expression
   75           | expression MOD expression
   76           | expression PLUS expression
   77           | expression MINUS expression
   78           | boolean_expression
   79           | NOT expression
   80           | expression AND expression
   81           | expression OR expression

   82 boolean_expression: expression LESS expression
   83                   | expression LESSEQUAL expression
   84                   | expression EQUAL expression
   85                   | expression GREATEREQUAL expression
   86                   | expression GREATER expression
   87                   | expression LESSGREATER expression

   88 function_invocation_statement: IDENT BRACELEFT expression_list BRACERIGHT

   89 expression_list: expression_list COMMA expression
   90                | expression
   91                | epsilon

   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE statement_list KWEND KWIF
   93                      | KWIF boolean_expression KWTHEN statement_list KWEND KWIF

   94 while_statement: KWWHILE boolean_expression KWDO statement_list KWEND KWDO

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO

   96 return_statement: KWRETURN expression

   97 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMA (258) 19 89
SEMICOLON (259) 1 13 15 29 36 41 51 55 56
COLON (260) 17 18 23 24 25 26 27 29 36 41
BRACELEFT (261) 13 69 88
BRACERIGHT (262) 13 69 88
BRACKETLEFT (263) 64 65 66
BRACKETRIGHT (264) 64 65 66
ASSIGN (265) 58 95
LESS (266) 82
LESSEQUAL (267) 83
LESSGREATER (268) 87
GREATEREQUAL (269) 85
GREATER (270) 86
EQUAL (271) 84
PLUS (272) 76
MINUS (273) 68 77
MULTIPLY (274) 73
DIVIDE (275) 74
MOD (276) 75
NOT (277) 79
AND (278) 80
OR (279) 81
UNARY_NEGATIVE (280)
KWARRAY (281) 27 33 36 39
KWBEGIN (282) 57
KWBOOLEAN (283) 25 34
KWDEF (284)
KWDO (285) 94 95
KWELSE (286) 92
KWEND (287) 1 13 57 92 93 94 95
KWFALSSE (288)
KWFOR (289) 95
KWINTEGER (290) 23 30
KWIF (291) 92 93
KWOF (292) 37 38
KWPRINT (293) 60 61
KWREAD (294) 62
KWREAL (295) 24 31
KWSTRING (296) 26 32
KWTHEN (297) 92 93
KWTO (298) 37 38 95
KWTRUE (299) 45
KWFALSE (300) 46
KWRETURN (301) 96
KWVAR (302) 29 36 41
KWWHILE (303) 94
OCTAL (304)
INTEGER (305) 37 38 42 95
REAL (306) 43
IDENT (307) 1 2 13 19 20 63 64 88 95
STRING (308) 44


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
programname (56)
    on left: 2, on right: 1
programbody (57)
    on left: 3, on right: 1
var_const_decl_list (58)
    on left: 4 5 6, on right: 3 4 57
var_const_decl (59)
    on left: 7 8 9, on right: 4 5
func_decl_list (60)
    on left: 10 11 12, on right: 3 10
func_decl (61)
    on left: 13, on right: 10 11
arg_lists (62)
    on left: 14 15 16, on right: 13 15
arg (63)
    on left: 17 18, on right: 14 15
identifier_list (64)
    on left: 19 20 21 22, on right: 17 18 19 29 36 41
func_type (65)
    on left: 23 24 25 26 27 28, on right: 13
var_decl (66)
    on left: 29, on right: 7
var_type (67)
    on left: 30 31 32 33 34 35, on right: 17 27 29 36
array_decl (68)
    on left: 36, on right: 8 18
array_dimension_decl (69)
    on left: 37 38, on right: 27 36 37
more_array_or_not (70)
    on left: 39 40, on right: 37 38
const_decl (71)
    on left: 41, on right: 9
literal_constant_list (72)
    on left: 42 43 44 45 46, on right: 41 70
statement_list (73)
    on left: 47 48 49, on right: 47 57 92 93 94 95
statement (74)
    on left: 50 51 52 53 54 55 56, on right: 47 48
compound_statement (75)
    on left: 57, on right: 3 13 50
simple_statement (76)
    on left: 58 59 60 61 62, on right: 51
variable_reference (77)
    on left: 63 64, on right: 58 60 62 71
array_extend (78)
    on left: 65 66 67, on right: 64 66
expression (79)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81, on right: 61
    64 65 66 68 69 73 74 75 76 77 79 80 81 82 83 84 85 86 87 89 90
    96
boolean_expression (80)
    on left: 82 83 84 85 86 87, on right: 78 92 93 94
function_invocation_statement (81)
    on left: 88, on right: 56 72
expression_list (82)
    on left: 89 90 91, on right: 58 88 89
conditional_statement (83)
    on left: 92 93, on right: 52
while_statement (84)
    on left: 94, on right: 53
for_statement (85)
    on left: 95, on right: 54
return_statement (86)
    on left: 96, on right: 55
epsilon (87)
    on left: 97, on right: 6 12 16 21 28 40 49 67 91


State 0

    0 $accept: . program $end

    IDENT  shift, and go to state 1

    program      go to state 2
    programname  go to state 3


State 1

    2 programname: IDENT .

    $default  reduce using rule 2 (programname)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: programname . SEMICOLON programbody KWEND IDENT

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: programname SEMICOLON . programbody KWEND IDENT

    KWVAR  shift, and go to state 6

    KWVAR     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    programbody          go to state 7
    var_const_decl_list  go to state 8
    var_const_decl       go to state 9
    var_decl             go to state 10
    array_decl           go to state 11
    const_decl           go to state 12
    epsilon              go to state 13


State 6

   29 var_decl: KWVAR . identifier_list COLON var_type SEMICOLON
   36 array_decl: KWVAR . identifier_list COLON KWARRAY array_dimension_decl var_type SEMICOLON
   41 const_decl: KWVAR . identifier_list COLON literal_constant_list SEMICOLON

    IDENT  shift, and go to state 14

    COLON     reduce using rule 22 (identifier_list)
    COLON     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 22 (identifier_list)

    identifier_list  go to state 15
    epsilon          go to state 16


State 7

    1 program: programname SEMICOLON programbody . KWEND IDENT

    KWEND  shift, and go to state 17


State 8

    3 programbody: var_const_decl_list . func_decl_list compound_statement
    4 var_const_decl_list: var_const_decl_list . var_const_decl

    KWVAR  shift, and go to state 6
    IDENT  shift, and go to state 18

    IDENT     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    var_const_decl  go to state 19
    func_decl_list  go to state 20
    func_decl       go to state 21
    var_decl        go to state 10
    array_decl      go to state 11
    const_decl      go to state 12
    epsilon         go to state 22


State 9

    5 var_const_decl_list: var_const_decl .

    $default  reduce using rule 5 (var_const_decl_list)


State 10

    7 var_const_decl: var_decl .

    $default  reduce using rule 7 (var_const_decl)


State 11

    8 var_const_decl: array_decl .

    $default  reduce using rule 8 (var_const_decl)


State 12

    9 var_const_decl: const_decl .

    $default  reduce using rule 9 (var_const_decl)


State 13

    6 var_const_decl_list: epsilon .

    $default  reduce using rule 6 (var_const_decl_list)


State 14

   19 identifier_list: IDENT . COMMA identifier_list
   20                | IDENT .

    COMMA  shift, and go to state 23

    $default  reduce using rule 20 (identifier_list)


State 15

   29 var_decl: KWVAR identifier_list . COLON var_type SEMICOLON
   36 array_decl: KWVAR identifier_list . COLON KWARRAY array_dimension_decl var_type SEMICOLON
   41 const_decl: KWVAR identifier_list . COLON literal_constant_list SEMICOLON

    COLON  shift, and go to state 24


State 16

   21 identifier_list: epsilon .

    $default  reduce using rule 21 (identifier_list)


State 17

    1 program: programname SEMICOLON programbody KWEND . IDENT

    IDENT  shift, and go to state 25


State 18

   13 func_decl: IDENT . BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT

    BRACELEFT  shift, and go to state 26


State 19

    4 var_const_decl_list: var_const_decl_list var_const_decl .

    $default  reduce using rule 4 (var_const_decl_list)


State 20

    3 programbody: var_const_decl_list func_decl_list . compound_statement
   10 func_decl_list: func_decl_list . func_decl

    KWBEGIN  shift, and go to state 27
    IDENT    shift, and go to state 18

    func_decl           go to state 28
    compound_statement  go to state 29


State 21

   11 func_decl_list: func_decl .

    $default  reduce using rule 11 (func_decl_list)


State 22

   12 func_decl_list: epsilon .

    $default  reduce using rule 12 (func_decl_list)


State 23

   19 identifier_list: IDENT COMMA . identifier_list

    IDENT  shift, and go to state 14

    COLON     reduce using rule 22 (identifier_list)
    COLON     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 22 (identifier_list)

    identifier_list  go to state 30
    epsilon          go to state 16


State 24

   29 var_decl: KWVAR identifier_list COLON . var_type SEMICOLON
   36 array_decl: KWVAR identifier_list COLON . KWARRAY array_dimension_decl var_type SEMICOLON
   41 const_decl: KWVAR identifier_list COLON . literal_constant_list SEMICOLON

    KWARRAY    shift, and go to state 31
    KWBOOLEAN  shift, and go to state 32
    KWINTEGER  shift, and go to state 33
    KWREAL     shift, and go to state 34
    KWSTRING   shift, and go to state 35
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    STRING     shift, and go to state 40

    $default  reduce using rule 35 (var_type)

    var_type               go to state 41
    literal_constant_list  go to state 42


State 25

    1 program: programname SEMICOLON programbody KWEND IDENT .

    $default  reduce using rule 1 (program)


State 26

   13 func_decl: IDENT BRACELEFT . arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT

    IDENT  shift, and go to state 14

    COLON     reduce using rule 22 (identifier_list)
    COLON     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    arg_lists        go to state 43
    arg              go to state 44
    identifier_list  go to state 45
    epsilon          go to state 46


State 27

   57 compound_statement: KWBEGIN . var_const_decl_list statement_list KWEND

    KWVAR  shift, and go to state 6

    KWVAR     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    var_const_decl_list  go to state 47
    var_const_decl       go to state 9
    var_decl             go to state 10
    array_decl           go to state 11
    const_decl           go to state 12
    epsilon              go to state 13


State 28

   10 func_decl_list: func_decl_list func_decl .

    $default  reduce using rule 10 (func_decl_list)


State 29

    3 programbody: var_const_decl_list func_decl_list compound_statement .

    $default  reduce using rule 3 (programbody)


State 30

   19 identifier_list: IDENT COMMA identifier_list .

    $default  reduce using rule 19 (identifier_list)


State 31

   33 var_type: KWARRAY .
   36 array_decl: KWVAR identifier_list COLON KWARRAY . array_dimension_decl var_type SEMICOLON

    INTEGER  shift, and go to state 48

    $default  reduce using rule 33 (var_type)

    array_dimension_decl  go to state 49


State 32

   34 var_type: KWBOOLEAN .

    $default  reduce using rule 34 (var_type)


State 33

   30 var_type: KWINTEGER .

    $default  reduce using rule 30 (var_type)


State 34

   31 var_type: KWREAL .

    $default  reduce using rule 31 (var_type)


State 35

   32 var_type: KWSTRING .

    $default  reduce using rule 32 (var_type)


State 36

   45 literal_constant_list: KWTRUE .

    $default  reduce using rule 45 (literal_constant_list)


State 37

   46 literal_constant_list: KWFALSE .

    $default  reduce using rule 46 (literal_constant_list)


State 38

   42 literal_constant_list: INTEGER .

    $default  reduce using rule 42 (literal_constant_list)


State 39

   43 literal_constant_list: REAL .

    $default  reduce using rule 43 (literal_constant_list)


State 40

   44 literal_constant_list: STRING .

    $default  reduce using rule 44 (literal_constant_list)


State 41

   29 var_decl: KWVAR identifier_list COLON var_type . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 42

   41 const_decl: KWVAR identifier_list COLON literal_constant_list . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 43

   13 func_decl: IDENT BRACELEFT arg_lists . BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT
   15 arg_lists: arg_lists . SEMICOLON arg

    SEMICOLON   shift, and go to state 52
    BRACERIGHT  shift, and go to state 53


State 44

   14 arg_lists: arg .

    $default  reduce using rule 14 (arg_lists)


State 45

   17 arg: identifier_list . COLON var_type
   18    | identifier_list . COLON array_decl

    COLON  shift, and go to state 54


State 46

   16 arg_lists: epsilon .
   21 identifier_list: epsilon .

    COLON     reduce using rule 21 (identifier_list)
    $default  reduce using rule 16 (arg_lists)


State 47

    4 var_const_decl_list: var_const_decl_list . var_const_decl
   57 compound_statement: KWBEGIN var_const_decl_list . statement_list KWEND

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWVAR     shift, and go to state 6
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    SEMICOLON  reduce using rule 59 (simple_statement)
    SEMICOLON  [reduce using rule 97 (epsilon)]
    KWBEGIN    [reduce using rule 97 (epsilon)]
    KWEND      reduce using rule 97 (epsilon)
    KWFOR      [reduce using rule 97 (epsilon)]
    KWIF       [reduce using rule 97 (epsilon)]
    KWPRINT    [reduce using rule 97 (epsilon)]
    KWREAD     [reduce using rule 97 (epsilon)]
    KWRETURN   [reduce using rule 97 (epsilon)]
    KWWHILE    [reduce using rule 97 (epsilon)]
    IDENT      [reduce using rule 97 (epsilon)]
    $default   reduce using rule 59 (simple_statement)

    var_const_decl                 go to state 19
    var_decl                       go to state 10
    array_decl                     go to state 11
    const_decl                     go to state 12
    statement_list                 go to state 62
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71
    epsilon                        go to state 72


State 48

   38 array_dimension_decl: INTEGER . KWTO INTEGER KWOF more_array_or_not

    KWTO  shift, and go to state 73


State 49

   36 array_decl: KWVAR identifier_list COLON KWARRAY array_dimension_decl . var_type SEMICOLON
   37 array_dimension_decl: array_dimension_decl . INTEGER KWTO INTEGER KWOF more_array_or_not

    KWARRAY    shift, and go to state 74
    KWBOOLEAN  shift, and go to state 32
    KWINTEGER  shift, and go to state 33
    KWREAL     shift, and go to state 34
    KWSTRING   shift, and go to state 35
    INTEGER    shift, and go to state 75

    $default  reduce using rule 35 (var_type)

    var_type  go to state 76


State 50

   29 var_decl: KWVAR identifier_list COLON var_type SEMICOLON .

    $default  reduce using rule 29 (var_decl)


State 51

   41 const_decl: KWVAR identifier_list COLON literal_constant_list SEMICOLON .

    $default  reduce using rule 41 (const_decl)


State 52

   15 arg_lists: arg_lists SEMICOLON . arg

    IDENT  shift, and go to state 14

    COLON     reduce using rule 22 (identifier_list)
    COLON     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 22 (identifier_list)

    arg              go to state 77
    identifier_list  go to state 45
    epsilon          go to state 16


State 53

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT . func_type SEMICOLON compound_statement KWEND IDENT

    COLON  shift, and go to state 78

    $default  reduce using rule 97 (epsilon)

    func_type  go to state 79
    epsilon    go to state 80


State 54

   17 arg: identifier_list COLON . var_type
   18    | identifier_list COLON . array_decl

    KWARRAY    shift, and go to state 74
    KWBOOLEAN  shift, and go to state 32
    KWINTEGER  shift, and go to state 33
    KWREAL     shift, and go to state 34
    KWSTRING   shift, and go to state 35
    KWVAR      shift, and go to state 81

    $default  reduce using rule 35 (var_type)

    var_type    go to state 82
    array_decl  go to state 83


State 55

   95 for_statement: KWFOR . IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO

    IDENT  shift, and go to state 84


State 56

   92 conditional_statement: KWIF . boolean_expression KWTHEN statement_list KWELSE statement_list KWEND KWIF
   93                      | KWIF . boolean_expression KWTHEN statement_list KWEND KWIF

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 90
    boolean_expression             go to state 91
    function_invocation_statement  go to state 92


State 57

   60 simple_statement: KWPRINT . variable_reference
   61                 | KWPRINT . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 93
    expression                     go to state 94
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 58

   62 simple_statement: KWREAD . variable_reference

    IDENT  shift, and go to state 96

    variable_reference  go to state 97


State 59

   96 return_statement: KWRETURN . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 98
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 60

   94 while_statement: KWWHILE . boolean_expression KWDO statement_list KWEND KWDO

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 90
    boolean_expression             go to state 99
    function_invocation_statement  go to state 92


State 61

   63 variable_reference: IDENT .
   64                   | IDENT . BRACKETLEFT expression BRACKETRIGHT array_extend
   88 function_invocation_statement: IDENT . BRACELEFT expression_list BRACERIGHT

    BRACELEFT    shift, and go to state 100
    BRACKETLEFT  shift, and go to state 101

    $default  reduce using rule 63 (variable_reference)


State 62

   47 statement_list: statement_list . statement
   57 compound_statement: KWBEGIN var_const_decl_list statement_list . KWEND

    KWBEGIN   shift, and go to state 27
    KWEND     shift, and go to state 102
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    $default  reduce using rule 59 (simple_statement)

    statement                      go to state 103
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71


State 63

   48 statement_list: statement .

    $default  reduce using rule 48 (statement_list)


State 64

   50 statement: compound_statement .

    $default  reduce using rule 50 (statement)


State 65

   51 statement: simple_statement . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 66

   58 simple_statement: variable_reference . ASSIGN expression_list

    ASSIGN  shift, and go to state 105


State 67

   56 statement: function_invocation_statement . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 68

   52 statement: conditional_statement .

    $default  reduce using rule 52 (statement)


State 69

   53 statement: while_statement .

    $default  reduce using rule 53 (statement)


State 70

   54 statement: for_statement .

    $default  reduce using rule 54 (statement)


State 71

   55 statement: return_statement . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 72

   49 statement_list: epsilon .

    $default  reduce using rule 49 (statement_list)


State 73

   38 array_dimension_decl: INTEGER KWTO . INTEGER KWOF more_array_or_not

    INTEGER  shift, and go to state 108


State 74

   33 var_type: KWARRAY .

    $default  reduce using rule 33 (var_type)


State 75

   37 array_dimension_decl: array_dimension_decl INTEGER . KWTO INTEGER KWOF more_array_or_not

    KWTO  shift, and go to state 109


State 76

   36 array_decl: KWVAR identifier_list COLON KWARRAY array_dimension_decl var_type . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 77

   15 arg_lists: arg_lists SEMICOLON arg .

    $default  reduce using rule 15 (arg_lists)


State 78

   23 func_type: COLON . KWINTEGER
   24          | COLON . KWREAL
   25          | COLON . KWBOOLEAN
   26          | COLON . KWSTRING
   27          | COLON . KWARRAY array_dimension_decl var_type

    KWARRAY    shift, and go to state 111
    KWBOOLEAN  shift, and go to state 112
    KWINTEGER  shift, and go to state 113
    KWREAL     shift, and go to state 114
    KWSTRING   shift, and go to state 115


State 79

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type . SEMICOLON compound_statement KWEND IDENT

    SEMICOLON  shift, and go to state 116


State 80

   28 func_type: epsilon .

    $default  reduce using rule 28 (func_type)


State 81

   36 array_decl: KWVAR . identifier_list COLON KWARRAY array_dimension_decl var_type SEMICOLON

    IDENT  shift, and go to state 14

    COLON     reduce using rule 22 (identifier_list)
    COLON     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 22 (identifier_list)

    identifier_list  go to state 117
    epsilon          go to state 16


State 82

   17 arg: identifier_list COLON var_type .

    $default  reduce using rule 17 (arg)


State 83

   18 arg: identifier_list COLON array_decl .

    $default  reduce using rule 18 (arg)


State 84

   95 for_statement: KWFOR IDENT . ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO

    ASSIGN  shift, and go to state 118


State 85

   69 expression: BRACELEFT . expression BRACERIGHT

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 119
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 86

   68 expression: MINUS . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 120
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 87

   79 expression: NOT . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 121
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 88

   70 expression: literal_constant_list .

    $default  reduce using rule 70 (expression)


State 89

   71 expression: variable_reference .

    $default  reduce using rule 71 (expression)


State 90

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134


State 91

   78 expression: boolean_expression .
   92 conditional_statement: KWIF boolean_expression . KWTHEN statement_list KWELSE statement_list KWEND KWIF
   93                      | KWIF boolean_expression . KWTHEN statement_list KWEND KWIF

    KWTHEN  shift, and go to state 135

    $default  reduce using rule 78 (expression)


State 92

   72 expression: function_invocation_statement .

    $default  reduce using rule 72 (expression)


State 93

   60 simple_statement: KWPRINT variable_reference .
   71 expression: variable_reference .

    SEMICOLON  reduce using rule 60 (simple_statement)
    SEMICOLON  [reduce using rule 71 (expression)]
    $default   reduce using rule 71 (expression)


State 94

   61 simple_statement: KWPRINT expression .
   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134

    $default  reduce using rule 61 (simple_statement)


State 95

   78 expression: boolean_expression .

    $default  reduce using rule 78 (expression)


State 96

   63 variable_reference: IDENT .
   64                   | IDENT . BRACKETLEFT expression BRACKETRIGHT array_extend

    BRACKETLEFT  shift, and go to state 101

    $default  reduce using rule 63 (variable_reference)


State 97

   62 simple_statement: KWREAD variable_reference .

    $default  reduce using rule 62 (simple_statement)


State 98

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression
   96 return_statement: KWRETURN expression .

    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134

    $default  reduce using rule 96 (return_statement)


State 99

   78 expression: boolean_expression .
   94 while_statement: KWWHILE boolean_expression . KWDO statement_list KWEND KWDO

    KWDO  shift, and go to state 136

    $default  reduce using rule 78 (expression)


State 100

   88 function_invocation_statement: IDENT BRACELEFT . expression_list BRACERIGHT

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    $default  reduce using rule 97 (epsilon)

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 137
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92
    expression_list                go to state 138
    epsilon                        go to state 139


State 101

   64 variable_reference: IDENT BRACKETLEFT . expression BRACKETRIGHT array_extend

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 140
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 102

   57 compound_statement: KWBEGIN var_const_decl_list statement_list KWEND .

    $default  reduce using rule 57 (compound_statement)


State 103

   47 statement_list: statement_list statement .

    $default  reduce using rule 47 (statement_list)


State 104

   51 statement: simple_statement SEMICOLON .

    $default  reduce using rule 51 (statement)


State 105

   58 simple_statement: variable_reference ASSIGN . expression_list

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    $default  reduce using rule 97 (epsilon)

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 137
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92
    expression_list                go to state 141
    epsilon                        go to state 139


State 106

   56 statement: function_invocation_statement SEMICOLON .

    $default  reduce using rule 56 (statement)


State 107

   55 statement: return_statement SEMICOLON .

    $default  reduce using rule 55 (statement)


State 108

   38 array_dimension_decl: INTEGER KWTO INTEGER . KWOF more_array_or_not

    KWOF  shift, and go to state 142


State 109

   37 array_dimension_decl: array_dimension_decl INTEGER KWTO . INTEGER KWOF more_array_or_not

    INTEGER  shift, and go to state 143


State 110

   36 array_decl: KWVAR identifier_list COLON KWARRAY array_dimension_decl var_type SEMICOLON .

    $default  reduce using rule 36 (array_decl)


State 111

   27 func_type: COLON KWARRAY . array_dimension_decl var_type

    INTEGER  shift, and go to state 48

    array_dimension_decl  go to state 144


State 112

   25 func_type: COLON KWBOOLEAN .

    $default  reduce using rule 25 (func_type)


State 113

   23 func_type: COLON KWINTEGER .

    $default  reduce using rule 23 (func_type)


State 114

   24 func_type: COLON KWREAL .

    $default  reduce using rule 24 (func_type)


State 115

   26 func_type: COLON KWSTRING .

    $default  reduce using rule 26 (func_type)


State 116

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON . compound_statement KWEND IDENT

    KWBEGIN  shift, and go to state 27

    compound_statement  go to state 145


State 117

   36 array_decl: KWVAR identifier_list . COLON KWARRAY array_dimension_decl var_type SEMICOLON

    COLON  shift, and go to state 146


State 118

   95 for_statement: KWFOR IDENT ASSIGN . INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO

    INTEGER  shift, and go to state 147


State 119

   69 expression: BRACELEFT expression . BRACERIGHT
   73           | expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    BRACERIGHT    shift, and go to state 148
    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134


State 120

   68 expression: MINUS expression .
   73           | expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    $default  reduce using rule 68 (expression)


State 121

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   79           | NOT expression .
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    AND  shift, and go to state 133
    OR   shift, and go to state 134

    $default  reduce using rule 79 (expression)


State 122

   82 boolean_expression: expression LESS . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 149
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 123

   83 boolean_expression: expression LESSEQUAL . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 150
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 124

   87 boolean_expression: expression LESSGREATER . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 151
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 125

   85 boolean_expression: expression GREATEREQUAL . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 152
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 126

   86 boolean_expression: expression GREATER . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 153
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 127

   84 boolean_expression: expression EQUAL . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 154
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 128

   76 expression: expression PLUS . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 155
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 129

   77 expression: expression MINUS . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 156
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 130

   73 expression: expression MULTIPLY . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 157
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 131

   74 expression: expression DIVIDE . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 158
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 132

   75 expression: expression MOD . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 159
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 133

   80 expression: expression AND . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 160
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 134

   81 expression: expression OR . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 161
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 135

   92 conditional_statement: KWIF boolean_expression KWTHEN . statement_list KWELSE statement_list KWEND KWIF
   93                      | KWIF boolean_expression KWTHEN . statement_list KWEND KWIF

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    SEMICOLON  reduce using rule 59 (simple_statement)
    SEMICOLON  [reduce using rule 97 (epsilon)]
    KWBEGIN    [reduce using rule 97 (epsilon)]
    KWFOR      [reduce using rule 97 (epsilon)]
    KWIF       [reduce using rule 97 (epsilon)]
    KWPRINT    [reduce using rule 97 (epsilon)]
    KWREAD     [reduce using rule 97 (epsilon)]
    KWRETURN   [reduce using rule 97 (epsilon)]
    KWWHILE    [reduce using rule 97 (epsilon)]
    IDENT      [reduce using rule 97 (epsilon)]
    $default   reduce using rule 97 (epsilon)

    statement_list                 go to state 162
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71
    epsilon                        go to state 72


State 136

   94 while_statement: KWWHILE boolean_expression KWDO . statement_list KWEND KWDO

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    SEMICOLON  reduce using rule 59 (simple_statement)
    SEMICOLON  [reduce using rule 97 (epsilon)]
    KWBEGIN    [reduce using rule 97 (epsilon)]
    KWEND      reduce using rule 97 (epsilon)
    KWFOR      [reduce using rule 97 (epsilon)]
    KWIF       [reduce using rule 97 (epsilon)]
    KWPRINT    [reduce using rule 97 (epsilon)]
    KWREAD     [reduce using rule 97 (epsilon)]
    KWRETURN   [reduce using rule 97 (epsilon)]
    KWWHILE    [reduce using rule 97 (epsilon)]
    IDENT      [reduce using rule 97 (epsilon)]
    $default   reduce using rule 59 (simple_statement)

    statement_list                 go to state 163
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71
    epsilon                        go to state 72


State 137

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression
   90 expression_list: expression .

    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134

    $default  reduce using rule 90 (expression_list)


State 138

   88 function_invocation_statement: IDENT BRACELEFT expression_list . BRACERIGHT
   89 expression_list: expression_list . COMMA expression

    COMMA       shift, and go to state 164
    BRACERIGHT  shift, and go to state 165


State 139

   91 expression_list: epsilon .

    $default  reduce using rule 91 (expression_list)


State 140

   64 variable_reference: IDENT BRACKETLEFT expression . BRACKETRIGHT array_extend
   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    BRACKETRIGHT  shift, and go to state 166
    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134


State 141

   58 simple_statement: variable_reference ASSIGN expression_list .
   89 expression_list: expression_list . COMMA expression

    COMMA  shift, and go to state 164

    $default  reduce using rule 58 (simple_statement)


State 142

   38 array_dimension_decl: INTEGER KWTO INTEGER KWOF . more_array_or_not

    KWARRAY  shift, and go to state 167

    KWARRAY   [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    more_array_or_not  go to state 168
    epsilon            go to state 169


State 143

   37 array_dimension_decl: array_dimension_decl INTEGER KWTO INTEGER . KWOF more_array_or_not

    KWOF  shift, and go to state 170


State 144

   27 func_type: COLON KWARRAY array_dimension_decl . var_type
   37 array_dimension_decl: array_dimension_decl . INTEGER KWTO INTEGER KWOF more_array_or_not

    KWARRAY    shift, and go to state 74
    KWBOOLEAN  shift, and go to state 32
    KWINTEGER  shift, and go to state 33
    KWREAL     shift, and go to state 34
    KWSTRING   shift, and go to state 35
    INTEGER    shift, and go to state 75

    $default  reduce using rule 35 (var_type)

    var_type  go to state 171


State 145

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement . KWEND IDENT

    KWEND  shift, and go to state 172


State 146

   36 array_decl: KWVAR identifier_list COLON . KWARRAY array_dimension_decl var_type SEMICOLON

    KWARRAY  shift, and go to state 173


State 147

   95 for_statement: KWFOR IDENT ASSIGN INTEGER . KWTO INTEGER KWDO statement_list KWEND KWDO

    KWTO  shift, and go to state 174


State 148

   69 expression: BRACELEFT expression BRACERIGHT .

    $default  reduce using rule 69 (expression)


State 149

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   82                   | expression LESS expression .
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 128
    MINUS     shift, and go to state 129
    MULTIPLY  shift, and go to state 130
    DIVIDE    shift, and go to state 131
    MOD       shift, and go to state 132
    AND       shift, and go to state 133
    OR        shift, and go to state 134

    $default  reduce using rule 82 (boolean_expression)


State 150

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   83                   | expression LESSEQUAL expression .
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 128
    MINUS     shift, and go to state 129
    MULTIPLY  shift, and go to state 130
    DIVIDE    shift, and go to state 131
    MOD       shift, and go to state 132
    AND       shift, and go to state 133
    OR        shift, and go to state 134

    $default  reduce using rule 83 (boolean_expression)


State 151

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression
   87                   | expression LESSGREATER expression .

    PLUS      shift, and go to state 128
    MINUS     shift, and go to state 129
    MULTIPLY  shift, and go to state 130
    DIVIDE    shift, and go to state 131
    MOD       shift, and go to state 132
    AND       shift, and go to state 133
    OR        shift, and go to state 134

    $default  reduce using rule 87 (boolean_expression)


State 152

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   85                   | expression GREATEREQUAL expression .
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 128
    MINUS     shift, and go to state 129
    MULTIPLY  shift, and go to state 130
    DIVIDE    shift, and go to state 131
    MOD       shift, and go to state 132
    AND       shift, and go to state 133
    OR        shift, and go to state 134

    $default  reduce using rule 85 (boolean_expression)


State 153

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   86                   | expression GREATER expression .
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 128
    MINUS     shift, and go to state 129
    MULTIPLY  shift, and go to state 130
    DIVIDE    shift, and go to state 131
    MOD       shift, and go to state 132
    AND       shift, and go to state 133
    OR        shift, and go to state 134

    $default  reduce using rule 86 (boolean_expression)


State 154

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   84                   | expression EQUAL expression .
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 128
    MINUS     shift, and go to state 129
    MULTIPLY  shift, and go to state 130
    DIVIDE    shift, and go to state 131
    MOD       shift, and go to state 132
    AND       shift, and go to state 133
    OR        shift, and go to state 134

    $default  reduce using rule 84 (boolean_expression)


State 155

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   76           | expression PLUS expression .
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    MULTIPLY  shift, and go to state 130
    DIVIDE    shift, and go to state 131
    MOD       shift, and go to state 132
    AND       shift, and go to state 133
    OR        shift, and go to state 134

    $default  reduce using rule 76 (expression)


State 156

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   77           | expression MINUS expression .
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    MULTIPLY  shift, and go to state 130
    DIVIDE    shift, and go to state 131
    MOD       shift, and go to state 132
    AND       shift, and go to state 133
    OR        shift, and go to state 134

    $default  reduce using rule 77 (expression)


State 157

   73 expression: expression . MULTIPLY expression
   73           | expression MULTIPLY expression .
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    AND  shift, and go to state 133
    OR   shift, and go to state 134

    $default  reduce using rule 73 (expression)


State 158

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   74           | expression DIVIDE expression .
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    AND  shift, and go to state 133
    OR   shift, and go to state 134

    $default  reduce using rule 74 (expression)


State 159

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   75           | expression MOD expression .
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    AND  shift, and go to state 133
    OR   shift, and go to state 134

    $default  reduce using rule 75 (expression)


State 160

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   80           | expression AND expression .
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    $default  reduce using rule 80 (expression)


State 161

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   81           | expression OR expression .
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    $default  reduce using rule 81 (expression)


State 162

   47 statement_list: statement_list . statement
   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list . KWELSE statement_list KWEND KWIF
   93                      | KWIF boolean_expression KWTHEN statement_list . KWEND KWIF

    KWBEGIN   shift, and go to state 27
    KWELSE    shift, and go to state 175
    KWEND     shift, and go to state 176
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    $default  reduce using rule 59 (simple_statement)

    statement                      go to state 103
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71


State 163

   47 statement_list: statement_list . statement
   94 while_statement: KWWHILE boolean_expression KWDO statement_list . KWEND KWDO

    KWBEGIN   shift, and go to state 27
    KWEND     shift, and go to state 177
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    $default  reduce using rule 59 (simple_statement)

    statement                      go to state 103
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71


State 164

   89 expression_list: expression_list COMMA . expression

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 178
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 165

   88 function_invocation_statement: IDENT BRACELEFT expression_list BRACERIGHT .

    $default  reduce using rule 88 (function_invocation_statement)


State 166

   64 variable_reference: IDENT BRACKETLEFT expression BRACKETRIGHT . array_extend

    BRACKETLEFT  shift, and go to state 179

    BRACKETLEFT  [reduce using rule 97 (epsilon)]
    $default     reduce using rule 97 (epsilon)

    array_extend  go to state 180
    epsilon       go to state 181


State 167

   39 more_array_or_not: KWARRAY .

    $default  reduce using rule 39 (more_array_or_not)


State 168

   38 array_dimension_decl: INTEGER KWTO INTEGER KWOF more_array_or_not .

    $default  reduce using rule 38 (array_dimension_decl)


State 169

   40 more_array_or_not: epsilon .

    $default  reduce using rule 40 (more_array_or_not)


State 170

   37 array_dimension_decl: array_dimension_decl INTEGER KWTO INTEGER KWOF . more_array_or_not

    KWARRAY  shift, and go to state 167

    KWARRAY   [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    more_array_or_not  go to state 182
    epsilon            go to state 169


State 171

   27 func_type: COLON KWARRAY array_dimension_decl var_type .

    $default  reduce using rule 27 (func_type)


State 172

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND . IDENT

    IDENT  shift, and go to state 183


State 173

   36 array_decl: KWVAR identifier_list COLON KWARRAY . array_dimension_decl var_type SEMICOLON

    INTEGER  shift, and go to state 48

    array_dimension_decl  go to state 49


State 174

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO . INTEGER KWDO statement_list KWEND KWDO

    INTEGER  shift, and go to state 184


State 175

   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE . statement_list KWEND KWIF

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    SEMICOLON  reduce using rule 59 (simple_statement)
    SEMICOLON  [reduce using rule 97 (epsilon)]
    KWBEGIN    [reduce using rule 97 (epsilon)]
    KWEND      reduce using rule 97 (epsilon)
    KWFOR      [reduce using rule 97 (epsilon)]
    KWIF       [reduce using rule 97 (epsilon)]
    KWPRINT    [reduce using rule 97 (epsilon)]
    KWREAD     [reduce using rule 97 (epsilon)]
    KWRETURN   [reduce using rule 97 (epsilon)]
    KWWHILE    [reduce using rule 97 (epsilon)]
    IDENT      [reduce using rule 97 (epsilon)]
    $default   reduce using rule 59 (simple_statement)

    statement_list                 go to state 185
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71
    epsilon                        go to state 72


State 176

   93 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWEND . KWIF

    KWIF  shift, and go to state 186


State 177

   94 while_statement: KWWHILE boolean_expression KWDO statement_list KWEND . KWDO

    KWDO  shift, and go to state 187


State 178

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression
   89 expression_list: expression_list COMMA expression .

    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134

    $default  reduce using rule 89 (expression_list)


State 179

   65 array_extend: BRACKETLEFT . expression BRACKETRIGHT

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 188
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 180

   64 variable_reference: IDENT BRACKETLEFT expression BRACKETRIGHT array_extend .
   66 array_extend: array_extend . BRACKETLEFT expression BRACKETRIGHT

    BRACKETLEFT  shift, and go to state 189

    $default  reduce using rule 64 (variable_reference)


State 181

   67 array_extend: epsilon .

    $default  reduce using rule 67 (array_extend)


State 182

   37 array_dimension_decl: array_dimension_decl INTEGER KWTO INTEGER KWOF more_array_or_not .

    $default  reduce using rule 37 (array_dimension_decl)


State 183

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT .

    $default  reduce using rule 13 (func_decl)


State 184

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER . KWDO statement_list KWEND KWDO

    KWDO  shift, and go to state 190


State 185

   47 statement_list: statement_list . statement
   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE statement_list . KWEND KWIF

    KWBEGIN   shift, and go to state 27
    KWEND     shift, and go to state 191
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    $default  reduce using rule 59 (simple_statement)

    statement                      go to state 103
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71


State 186

   93 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWEND KWIF .

    $default  reduce using rule 93 (conditional_statement)


State 187

   94 while_statement: KWWHILE boolean_expression KWDO statement_list KWEND KWDO .

    $default  reduce using rule 94 (while_statement)


State 188

   65 array_extend: BRACKETLEFT expression . BRACKETRIGHT
   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    BRACKETRIGHT  shift, and go to state 192
    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134


State 189

   66 array_extend: array_extend BRACKETLEFT . expression BRACKETRIGHT

    BRACELEFT  shift, and go to state 85
    MINUS      shift, and go to state 86
    NOT        shift, and go to state 87
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 88
    variable_reference             go to state 89
    expression                     go to state 193
    boolean_expression             go to state 95
    function_invocation_statement  go to state 92


State 190

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO . statement_list KWEND KWDO

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    SEMICOLON  reduce using rule 59 (simple_statement)
    SEMICOLON  [reduce using rule 97 (epsilon)]
    KWBEGIN    [reduce using rule 97 (epsilon)]
    KWEND      reduce using rule 97 (epsilon)
    KWFOR      [reduce using rule 97 (epsilon)]
    KWIF       [reduce using rule 97 (epsilon)]
    KWPRINT    [reduce using rule 97 (epsilon)]
    KWREAD     [reduce using rule 97 (epsilon)]
    KWRETURN   [reduce using rule 97 (epsilon)]
    KWWHILE    [reduce using rule 97 (epsilon)]
    IDENT      [reduce using rule 97 (epsilon)]
    $default   reduce using rule 59 (simple_statement)

    statement_list                 go to state 194
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71
    epsilon                        go to state 72


State 191

   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE statement_list KWEND . KWIF

    KWIF  shift, and go to state 195


State 192

   65 array_extend: BRACKETLEFT expression BRACKETRIGHT .

    $default  reduce using rule 65 (array_extend)


State 193

   66 array_extend: array_extend BRACKETLEFT expression . BRACKETRIGHT
   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    BRACKETRIGHT  shift, and go to state 196
    LESS          shift, and go to state 122
    LESSEQUAL     shift, and go to state 123
    LESSGREATER   shift, and go to state 124
    GREATEREQUAL  shift, and go to state 125
    GREATER       shift, and go to state 126
    EQUAL         shift, and go to state 127
    PLUS          shift, and go to state 128
    MINUS         shift, and go to state 129
    MULTIPLY      shift, and go to state 130
    DIVIDE        shift, and go to state 131
    MOD           shift, and go to state 132
    AND           shift, and go to state 133
    OR            shift, and go to state 134


State 194

   47 statement_list: statement_list . statement
   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list . KWEND KWDO

    KWBEGIN   shift, and go to state 27
    KWEND     shift, and go to state 197
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    $default  reduce using rule 59 (simple_statement)

    statement                      go to state 103
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    function_invocation_statement  go to state 67
    conditional_statement          go to state 68
    while_statement                go to state 69
    for_statement                  go to state 70
    return_statement               go to state 71


State 195

   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE statement_list KWEND KWIF .

    $default  reduce using rule 92 (conditional_statement)


State 196

   66 array_extend: array_extend BRACKETLEFT expression BRACKETRIGHT .

    $default  reduce using rule 66 (array_extend)


State 197

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND . KWDO

    KWDO  shift, and go to state 198


State 198

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO .

    $default  reduce using rule 95 (for_statement)
