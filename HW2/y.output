Nonterminals useless in grammar

   ident_or_ont
   integer_expression


Terminals unused in grammar

   KWDEF
   KWFALSSE
   OCTAL


Rules useless in grammar

   98 ident_or_ont: IDENT
   99             | epsilon

  100 integer_expression: INTEGER MULTIPLY INTEGER
  101                   | INTEGER DIVIDE INTEGER
  102                   | INTEGER MOD INTEGER
  103                   | INTEGER PLUS INTEGER
  104                   | INTEGER MINUS INTEGER
  105                   | INTEGER
  106                   | IDENT


Rules useless in parser due to conflicts

   71 expression: array_reference


State 5 conflicts: 1 shift/reduce
State 8 conflicts: 1 shift/reduce
State 27 conflicts: 1 shift/reduce
State 47 conflicts: 8 shift/reduce
State 91 conflicts: 19 reduce/reduce
State 95 conflicts: 1 reduce/reduce
State 138 conflicts: 8 shift/reduce
State 139 conflicts: 8 shift/reduce
State 147 conflicts: 1 shift/reduce
State 179 conflicts: 1 shift/reduce
State 185 conflicts: 8 shift/reduce
State 196 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: programname SEMICOLON programbody KWEND IDENT

    2 programname: IDENT

    3 programbody: var_const_decl_list func_decl_list compound_statement

    4 var_const_decl_list: var_const_decl_list var_const_decl
    5                    | var_const_decl
    6                    | epsilon

    7 var_const_decl: var_decl
    8               | array_decl
    9               | const_decl

   10 func_decl_list: func_decl_list func_decl
   11               | func_decl
   12               | epsilon

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT

   14 arg_lists: arg
   15          | arg_lists SEMICOLON arg
   16          | epsilon

   17 arg: identifier_list COLON var_type
   18    | identifier_list COLON array_decl

   19 identifier_list: IDENT COMMA identifier_list
   20                | IDENT
   21                | epsilon

   22 func_type: COLON KWINTEGER
   23          | COLON KWREAL
   24          | COLON KWBOOLEAN
   25          | COLON KWSTRING
   26          | COLON KWARRAY array_dimension_decl var_type
   27          | epsilon

   28 var_decl: KWVAR identifier_list COLON var_type SEMICOLON

   29 var_type: KWINTEGER
   30         | KWREAL
   31         | KWSTRING
   32         | KWARRAY
   33         | KWBOOLEAN
   34         | %empty

   35 array_decl: KWVAR identifier_list COLON KWARRAY array_dimension_decl var_type SEMICOLON

   36 array_dimension_decl: array_dimension_decl INTEGER KWTO INTEGER KWOF more_array_or_not
   37                     | INTEGER KWTO INTEGER KWOF more_array_or_not

   38 more_array_or_not: KWARRAY
   39                  | epsilon

   40 const_decl: KWVAR identifier_list COLON literal_constant_list SEMICOLON

   41 literal_constant_list: INTEGER
   42                      | REAL
   43                      | STRING
   44                      | KWTRUE
   45                      | KWFALSE

   46 statement_list: statement_list statement
   47               | statement
   48               | epsilon

   49 statement: compound_statement
   50          | simple_statement SEMICOLON
   51          | conditional_statement
   52          | while_statement
   53          | for_statement
   54          | return_statement SEMICOLON
   55          | function_invocation_statement SEMICOLON

   56 compound_statement: KWBEGIN var_const_decl_list statement_list KWEND

   57 simple_statement: variable_reference ASSIGN expression_list
   58                 | variable_reference ASSIGN IDENT array_reference
   59                 | KWPRINT variable_reference
   60                 | KWPRINT expression
   61                 | KWREAD variable_reference

   62 variable_reference: IDENT
   63                   | array_reference

   64 array_reference: IDENT array_extend

   65 array_extend: BRACKETLEFT expression BRACKETRIGHT
   66             | array_extend BRACKETLEFT expression BRACKETRIGHT

   67 expression: MINUS BRACELEFT expression BRACERIGHT
   68           | BRACELEFT expression BRACERIGHT
   69           | literal_constant_list
   70           | variable_reference
   71           | array_reference
   72           | function_invocation_statement
   73           | expression MULTIPLY expression
   74           | expression DIVIDE expression
   75           | expression MOD expression
   76           | expression PLUS expression
   77           | expression MINUS expression
   78           | boolean_expression
   79           | NOT expression
   80           | expression AND expression
   81           | expression OR expression

   82 boolean_expression: expression LESS expression
   83                   | expression LESSEQUAL expression
   84                   | expression EQUAL expression
   85                   | expression GREATEREQUAL expression
   86                   | expression GREATER expression
   87                   | expression LESSGREATER expression

   88 function_invocation_statement: IDENT BRACELEFT expression_list BRACERIGHT

   89 expression_list: expression_list COMMA expression
   90                | expression
   91                | epsilon

   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE statement_list KWEND KWIF
   93                      | KWIF boolean_expression KWTHEN statement_list KWEND KWIF

   94 while_statement: KWWHILE boolean_expression KWDO statement_list KWEND KWDO

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO

   96 return_statement: KWRETURN expression

   97 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMA (258) 19 89
SEMICOLON (259) 1 13 15 28 35 40 50 54 55
COLON (260) 17 18 22 23 24 25 26 28 35 40
BRACELEFT (261) 13 67 68 88
BRACERIGHT (262) 13 67 68 88
BRACKETLEFT (263) 65 66
BRACKETRIGHT (264) 65 66
ASSIGN (265) 57 58 95
LESS (266) 82
LESSEQUAL (267) 83
LESSGREATER (268) 87
GREATEREQUAL (269) 85
GREATER (270) 86
EQUAL (271) 84
PLUS (272) 76
MINUS (273) 67 77
MULTIPLY (274) 73
DIVIDE (275) 74
MOD (276) 75
NOT (277) 79
AND (278) 80
OR (279) 81
UNARY_NEGATIVE (280)
KWARRAY (281) 26 32 35 38
KWBEGIN (282) 56
KWBOOLEAN (283) 24 33
KWDEF (284)
KWDO (285) 94 95
KWELSE (286) 92
KWEND (287) 1 13 56 92 93 94 95
KWFALSSE (288)
KWFOR (289) 95
KWINTEGER (290) 22 29
KWIF (291) 92 93
KWOF (292) 36 37
KWPRINT (293) 59 60
KWREAD (294) 61
KWREAL (295) 23 30
KWSTRING (296) 25 31
KWTHEN (297) 92 93
KWTO (298) 36 37 95
KWTRUE (299) 44
KWFALSE (300) 45
KWRETURN (301) 96
KWVAR (302) 28 35 40
KWWHILE (303) 94
OCTAL (304)
INTEGER (305) 36 37 41 95
REAL (306) 42
IDENT (307) 1 2 13 19 20 58 62 64 88 95
STRING (308) 43


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
programname (56)
    on left: 2, on right: 1
programbody (57)
    on left: 3, on right: 1
var_const_decl_list (58)
    on left: 4 5 6, on right: 3 4 56
var_const_decl (59)
    on left: 7 8 9, on right: 4 5
func_decl_list (60)
    on left: 10 11 12, on right: 3 10
func_decl (61)
    on left: 13, on right: 10 11
arg_lists (62)
    on left: 14 15 16, on right: 13 15
arg (63)
    on left: 17 18, on right: 14 15
identifier_list (64)
    on left: 19 20 21, on right: 17 18 19 28 35 40
func_type (65)
    on left: 22 23 24 25 26 27, on right: 13
var_decl (66)
    on left: 28, on right: 7
var_type (67)
    on left: 29 30 31 32 33 34, on right: 17 26 28 35
array_decl (68)
    on left: 35, on right: 8 18
array_dimension_decl (69)
    on left: 36 37, on right: 26 35 36
more_array_or_not (70)
    on left: 38 39, on right: 36 37
const_decl (71)
    on left: 40, on right: 9
literal_constant_list (72)
    on left: 41 42 43 44 45, on right: 40 69
statement_list (73)
    on left: 46 47 48, on right: 46 56 92 93 94 95
statement (74)
    on left: 49 50 51 52 53 54 55, on right: 46 47
compound_statement (75)
    on left: 56, on right: 3 13 49
simple_statement (76)
    on left: 57 58 59 60 61, on right: 50
variable_reference (77)
    on left: 62 63, on right: 57 58 59 61 70
array_reference (78)
    on left: 64, on right: 58 63 71
array_extend (79)
    on left: 65 66, on right: 64 66
expression (80)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81, on right:
    60 65 66 67 68 73 74 75 76 77 79 80 81 82 83 84 85 86 87 89 90
    96
boolean_expression (81)
    on left: 82 83 84 85 86 87, on right: 78 92 93 94
function_invocation_statement (82)
    on left: 88, on right: 55 72
expression_list (83)
    on left: 89 90 91, on right: 57 88 89
conditional_statement (84)
    on left: 92 93, on right: 51
while_statement (85)
    on left: 94, on right: 52
for_statement (86)
    on left: 95, on right: 53
return_statement (87)
    on left: 96, on right: 54
epsilon (88)
    on left: 97, on right: 6 12 16 21 27 39 48 91


State 0

    0 $accept: . program $end

    IDENT  shift, and go to state 1

    program      go to state 2
    programname  go to state 3


State 1

    2 programname: IDENT .

    $default  reduce using rule 2 (programname)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: programname . SEMICOLON programbody KWEND IDENT

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: programname SEMICOLON . programbody KWEND IDENT

    KWVAR  shift, and go to state 6

    KWVAR     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    programbody          go to state 7
    var_const_decl_list  go to state 8
    var_const_decl       go to state 9
    var_decl             go to state 10
    array_decl           go to state 11
    const_decl           go to state 12
    epsilon              go to state 13


State 6

   28 var_decl: KWVAR . identifier_list COLON var_type SEMICOLON
   35 array_decl: KWVAR . identifier_list COLON KWARRAY array_dimension_decl var_type SEMICOLON
   40 const_decl: KWVAR . identifier_list COLON literal_constant_list SEMICOLON

    IDENT  shift, and go to state 14

    $default  reduce using rule 97 (epsilon)

    identifier_list  go to state 15
    epsilon          go to state 16


State 7

    1 program: programname SEMICOLON programbody . KWEND IDENT

    KWEND  shift, and go to state 17


State 8

    3 programbody: var_const_decl_list . func_decl_list compound_statement
    4 var_const_decl_list: var_const_decl_list . var_const_decl

    KWVAR  shift, and go to state 6
    IDENT  shift, and go to state 18

    IDENT     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    var_const_decl  go to state 19
    func_decl_list  go to state 20
    func_decl       go to state 21
    var_decl        go to state 10
    array_decl      go to state 11
    const_decl      go to state 12
    epsilon         go to state 22


State 9

    5 var_const_decl_list: var_const_decl .

    $default  reduce using rule 5 (var_const_decl_list)


State 10

    7 var_const_decl: var_decl .

    $default  reduce using rule 7 (var_const_decl)


State 11

    8 var_const_decl: array_decl .

    $default  reduce using rule 8 (var_const_decl)


State 12

    9 var_const_decl: const_decl .

    $default  reduce using rule 9 (var_const_decl)


State 13

    6 var_const_decl_list: epsilon .

    $default  reduce using rule 6 (var_const_decl_list)


State 14

   19 identifier_list: IDENT . COMMA identifier_list
   20                | IDENT .

    COMMA  shift, and go to state 23

    $default  reduce using rule 20 (identifier_list)


State 15

   28 var_decl: KWVAR identifier_list . COLON var_type SEMICOLON
   35 array_decl: KWVAR identifier_list . COLON KWARRAY array_dimension_decl var_type SEMICOLON
   40 const_decl: KWVAR identifier_list . COLON literal_constant_list SEMICOLON

    COLON  shift, and go to state 24


State 16

   21 identifier_list: epsilon .

    $default  reduce using rule 21 (identifier_list)


State 17

    1 program: programname SEMICOLON programbody KWEND . IDENT

    IDENT  shift, and go to state 25


State 18

   13 func_decl: IDENT . BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT

    BRACELEFT  shift, and go to state 26


State 19

    4 var_const_decl_list: var_const_decl_list var_const_decl .

    $default  reduce using rule 4 (var_const_decl_list)


State 20

    3 programbody: var_const_decl_list func_decl_list . compound_statement
   10 func_decl_list: func_decl_list . func_decl

    KWBEGIN  shift, and go to state 27
    IDENT    shift, and go to state 18

    func_decl           go to state 28
    compound_statement  go to state 29


State 21

   11 func_decl_list: func_decl .

    $default  reduce using rule 11 (func_decl_list)


State 22

   12 func_decl_list: epsilon .

    $default  reduce using rule 12 (func_decl_list)


State 23

   19 identifier_list: IDENT COMMA . identifier_list

    IDENT  shift, and go to state 14

    $default  reduce using rule 97 (epsilon)

    identifier_list  go to state 30
    epsilon          go to state 16


State 24

   28 var_decl: KWVAR identifier_list COLON . var_type SEMICOLON
   35 array_decl: KWVAR identifier_list COLON . KWARRAY array_dimension_decl var_type SEMICOLON
   40 const_decl: KWVAR identifier_list COLON . literal_constant_list SEMICOLON

    KWARRAY    shift, and go to state 31
    KWBOOLEAN  shift, and go to state 32
    KWINTEGER  shift, and go to state 33
    KWREAL     shift, and go to state 34
    KWSTRING   shift, and go to state 35
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    STRING     shift, and go to state 40

    $default  reduce using rule 34 (var_type)

    var_type               go to state 41
    literal_constant_list  go to state 42


State 25

    1 program: programname SEMICOLON programbody KWEND IDENT .

    $default  reduce using rule 1 (program)


State 26

   13 func_decl: IDENT BRACELEFT . arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT

    IDENT  shift, and go to state 14

    $default  reduce using rule 97 (epsilon)

    arg_lists        go to state 43
    arg              go to state 44
    identifier_list  go to state 45
    epsilon          go to state 46


State 27

   56 compound_statement: KWBEGIN . var_const_decl_list statement_list KWEND

    KWVAR  shift, and go to state 6

    KWVAR     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    var_const_decl_list  go to state 47
    var_const_decl       go to state 9
    var_decl             go to state 10
    array_decl           go to state 11
    const_decl           go to state 12
    epsilon              go to state 13


State 28

   10 func_decl_list: func_decl_list func_decl .

    $default  reduce using rule 10 (func_decl_list)


State 29

    3 programbody: var_const_decl_list func_decl_list compound_statement .

    $default  reduce using rule 3 (programbody)


State 30

   19 identifier_list: IDENT COMMA identifier_list .

    $default  reduce using rule 19 (identifier_list)


State 31

   32 var_type: KWARRAY .
   35 array_decl: KWVAR identifier_list COLON KWARRAY . array_dimension_decl var_type SEMICOLON

    INTEGER  shift, and go to state 48

    $default  reduce using rule 32 (var_type)

    array_dimension_decl  go to state 49


State 32

   33 var_type: KWBOOLEAN .

    $default  reduce using rule 33 (var_type)


State 33

   29 var_type: KWINTEGER .

    $default  reduce using rule 29 (var_type)


State 34

   30 var_type: KWREAL .

    $default  reduce using rule 30 (var_type)


State 35

   31 var_type: KWSTRING .

    $default  reduce using rule 31 (var_type)


State 36

   44 literal_constant_list: KWTRUE .

    $default  reduce using rule 44 (literal_constant_list)


State 37

   45 literal_constant_list: KWFALSE .

    $default  reduce using rule 45 (literal_constant_list)


State 38

   41 literal_constant_list: INTEGER .

    $default  reduce using rule 41 (literal_constant_list)


State 39

   42 literal_constant_list: REAL .

    $default  reduce using rule 42 (literal_constant_list)


State 40

   43 literal_constant_list: STRING .

    $default  reduce using rule 43 (literal_constant_list)


State 41

   28 var_decl: KWVAR identifier_list COLON var_type . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 42

   40 const_decl: KWVAR identifier_list COLON literal_constant_list . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 43

   13 func_decl: IDENT BRACELEFT arg_lists . BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT
   15 arg_lists: arg_lists . SEMICOLON arg

    SEMICOLON   shift, and go to state 52
    BRACERIGHT  shift, and go to state 53


State 44

   14 arg_lists: arg .

    $default  reduce using rule 14 (arg_lists)


State 45

   17 arg: identifier_list . COLON var_type
   18    | identifier_list . COLON array_decl

    COLON  shift, and go to state 54


State 46

   16 arg_lists: epsilon .
   21 identifier_list: epsilon .

    COLON     reduce using rule 21 (identifier_list)
    $default  reduce using rule 16 (arg_lists)


State 47

    4 var_const_decl_list: var_const_decl_list . var_const_decl
   56 compound_statement: KWBEGIN var_const_decl_list . statement_list KWEND

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWVAR     shift, and go to state 6
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    KWBEGIN   [reduce using rule 97 (epsilon)]
    KWFOR     [reduce using rule 97 (epsilon)]
    KWIF      [reduce using rule 97 (epsilon)]
    KWPRINT   [reduce using rule 97 (epsilon)]
    KWREAD    [reduce using rule 97 (epsilon)]
    KWRETURN  [reduce using rule 97 (epsilon)]
    KWWHILE   [reduce using rule 97 (epsilon)]
    IDENT     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    var_const_decl                 go to state 19
    var_decl                       go to state 10
    array_decl                     go to state 11
    const_decl                     go to state 12
    statement_list                 go to state 62
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72
    epsilon                        go to state 73


State 48

   37 array_dimension_decl: INTEGER . KWTO INTEGER KWOF more_array_or_not

    KWTO  shift, and go to state 74


State 49

   35 array_decl: KWVAR identifier_list COLON KWARRAY array_dimension_decl . var_type SEMICOLON
   36 array_dimension_decl: array_dimension_decl . INTEGER KWTO INTEGER KWOF more_array_or_not

    KWARRAY    shift, and go to state 75
    KWBOOLEAN  shift, and go to state 32
    KWINTEGER  shift, and go to state 33
    KWREAL     shift, and go to state 34
    KWSTRING   shift, and go to state 35
    INTEGER    shift, and go to state 76

    $default  reduce using rule 34 (var_type)

    var_type  go to state 77


State 50

   28 var_decl: KWVAR identifier_list COLON var_type SEMICOLON .

    $default  reduce using rule 28 (var_decl)


State 51

   40 const_decl: KWVAR identifier_list COLON literal_constant_list SEMICOLON .

    $default  reduce using rule 40 (const_decl)


State 52

   15 arg_lists: arg_lists SEMICOLON . arg

    IDENT  shift, and go to state 14

    $default  reduce using rule 97 (epsilon)

    arg              go to state 78
    identifier_list  go to state 45
    epsilon          go to state 16


State 53

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT . func_type SEMICOLON compound_statement KWEND IDENT

    COLON  shift, and go to state 79

    $default  reduce using rule 97 (epsilon)

    func_type  go to state 80
    epsilon    go to state 81


State 54

   17 arg: identifier_list COLON . var_type
   18    | identifier_list COLON . array_decl

    KWARRAY    shift, and go to state 75
    KWBOOLEAN  shift, and go to state 32
    KWINTEGER  shift, and go to state 33
    KWREAL     shift, and go to state 34
    KWSTRING   shift, and go to state 35
    KWVAR      shift, and go to state 82

    $default  reduce using rule 34 (var_type)

    var_type    go to state 83
    array_decl  go to state 84


State 55

   95 for_statement: KWFOR . IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO

    IDENT  shift, and go to state 85


State 56

   92 conditional_statement: KWIF . boolean_expression KWTHEN statement_list KWELSE statement_list KWEND KWIF
   93                      | KWIF . boolean_expression KWTHEN statement_list KWEND KWIF

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 92
    boolean_expression             go to state 93
    function_invocation_statement  go to state 94


State 57

   59 simple_statement: KWPRINT . variable_reference
   60                 | KWPRINT . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 95
    array_reference                go to state 91
    expression                     go to state 96
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 58

   61 simple_statement: KWREAD . variable_reference

    IDENT  shift, and go to state 98

    variable_reference  go to state 99
    array_reference     go to state 67


State 59

   96 return_statement: KWRETURN . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 100
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 60

   94 while_statement: KWWHILE . boolean_expression KWDO statement_list KWEND KWDO

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 92
    boolean_expression             go to state 101
    function_invocation_statement  go to state 94


State 61

   62 variable_reference: IDENT .
   64 array_reference: IDENT . array_extend
   88 function_invocation_statement: IDENT . BRACELEFT expression_list BRACERIGHT

    BRACELEFT    shift, and go to state 102
    BRACKETLEFT  shift, and go to state 103

    $default  reduce using rule 62 (variable_reference)

    array_extend  go to state 104


State 62

   46 statement_list: statement_list . statement
   56 compound_statement: KWBEGIN var_const_decl_list statement_list . KWEND

    KWBEGIN   shift, and go to state 27
    KWEND     shift, and go to state 105
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    statement                      go to state 106
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72


State 63

   47 statement_list: statement .

    $default  reduce using rule 47 (statement_list)


State 64

   49 statement: compound_statement .

    $default  reduce using rule 49 (statement)


State 65

   50 statement: simple_statement . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 66

   57 simple_statement: variable_reference . ASSIGN expression_list
   58                 | variable_reference . ASSIGN IDENT array_reference

    ASSIGN  shift, and go to state 108


State 67

   63 variable_reference: array_reference .

    $default  reduce using rule 63 (variable_reference)


State 68

   55 statement: function_invocation_statement . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 69

   51 statement: conditional_statement .

    $default  reduce using rule 51 (statement)


State 70

   52 statement: while_statement .

    $default  reduce using rule 52 (statement)


State 71

   53 statement: for_statement .

    $default  reduce using rule 53 (statement)


State 72

   54 statement: return_statement . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 73

   48 statement_list: epsilon .

    $default  reduce using rule 48 (statement_list)


State 74

   37 array_dimension_decl: INTEGER KWTO . INTEGER KWOF more_array_or_not

    INTEGER  shift, and go to state 111


State 75

   32 var_type: KWARRAY .

    $default  reduce using rule 32 (var_type)


State 76

   36 array_dimension_decl: array_dimension_decl INTEGER . KWTO INTEGER KWOF more_array_or_not

    KWTO  shift, and go to state 112


State 77

   35 array_decl: KWVAR identifier_list COLON KWARRAY array_dimension_decl var_type . SEMICOLON

    SEMICOLON  shift, and go to state 113


State 78

   15 arg_lists: arg_lists SEMICOLON arg .

    $default  reduce using rule 15 (arg_lists)


State 79

   22 func_type: COLON . KWINTEGER
   23          | COLON . KWREAL
   24          | COLON . KWBOOLEAN
   25          | COLON . KWSTRING
   26          | COLON . KWARRAY array_dimension_decl var_type

    KWARRAY    shift, and go to state 114
    KWBOOLEAN  shift, and go to state 115
    KWINTEGER  shift, and go to state 116
    KWREAL     shift, and go to state 117
    KWSTRING   shift, and go to state 118


State 80

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type . SEMICOLON compound_statement KWEND IDENT

    SEMICOLON  shift, and go to state 119


State 81

   27 func_type: epsilon .

    $default  reduce using rule 27 (func_type)


State 82

   35 array_decl: KWVAR . identifier_list COLON KWARRAY array_dimension_decl var_type SEMICOLON

    IDENT  shift, and go to state 14

    $default  reduce using rule 97 (epsilon)

    identifier_list  go to state 120
    epsilon          go to state 16


State 83

   17 arg: identifier_list COLON var_type .

    $default  reduce using rule 17 (arg)


State 84

   18 arg: identifier_list COLON array_decl .

    $default  reduce using rule 18 (arg)


State 85

   95 for_statement: KWFOR IDENT . ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO

    ASSIGN  shift, and go to state 121


State 86

   68 expression: BRACELEFT . expression BRACERIGHT

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 122
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 87

   67 expression: MINUS . BRACELEFT expression BRACERIGHT

    BRACELEFT  shift, and go to state 123


State 88

   79 expression: NOT . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 124
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 89

   69 expression: literal_constant_list .

    $default  reduce using rule 69 (expression)


State 90

   70 expression: variable_reference .

    $default  reduce using rule 70 (expression)


State 91

   63 variable_reference: array_reference .
   71 expression: array_reference .

    COMMA         reduce using rule 63 (variable_reference)
    COMMA         [reduce using rule 71 (expression)]
    SEMICOLON     reduce using rule 63 (variable_reference)
    SEMICOLON     [reduce using rule 71 (expression)]
    BRACERIGHT    reduce using rule 63 (variable_reference)
    BRACERIGHT    [reduce using rule 71 (expression)]
    BRACKETRIGHT  reduce using rule 63 (variable_reference)
    BRACKETRIGHT  [reduce using rule 71 (expression)]
    LESS          reduce using rule 63 (variable_reference)
    LESS          [reduce using rule 71 (expression)]
    LESSEQUAL     reduce using rule 63 (variable_reference)
    LESSEQUAL     [reduce using rule 71 (expression)]
    LESSGREATER   reduce using rule 63 (variable_reference)
    LESSGREATER   [reduce using rule 71 (expression)]
    GREATEREQUAL  reduce using rule 63 (variable_reference)
    GREATEREQUAL  [reduce using rule 71 (expression)]
    GREATER       reduce using rule 63 (variable_reference)
    GREATER       [reduce using rule 71 (expression)]
    EQUAL         reduce using rule 63 (variable_reference)
    EQUAL         [reduce using rule 71 (expression)]
    PLUS          reduce using rule 63 (variable_reference)
    PLUS          [reduce using rule 71 (expression)]
    MINUS         reduce using rule 63 (variable_reference)
    MINUS         [reduce using rule 71 (expression)]
    MULTIPLY      reduce using rule 63 (variable_reference)
    MULTIPLY      [reduce using rule 71 (expression)]
    DIVIDE        reduce using rule 63 (variable_reference)
    DIVIDE        [reduce using rule 71 (expression)]
    MOD           reduce using rule 63 (variable_reference)
    MOD           [reduce using rule 71 (expression)]
    AND           reduce using rule 63 (variable_reference)
    AND           [reduce using rule 71 (expression)]
    OR            reduce using rule 63 (variable_reference)
    OR            [reduce using rule 71 (expression)]
    KWDO          reduce using rule 63 (variable_reference)
    KWDO          [reduce using rule 71 (expression)]
    KWTHEN        reduce using rule 63 (variable_reference)
    KWTHEN        [reduce using rule 71 (expression)]
    $default      reduce using rule 63 (variable_reference)


State 92

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137


State 93

   78 expression: boolean_expression .
   92 conditional_statement: KWIF boolean_expression . KWTHEN statement_list KWELSE statement_list KWEND KWIF
   93                      | KWIF boolean_expression . KWTHEN statement_list KWEND KWIF

    KWTHEN  shift, and go to state 138

    $default  reduce using rule 78 (expression)


State 94

   72 expression: function_invocation_statement .

    $default  reduce using rule 72 (expression)


State 95

   59 simple_statement: KWPRINT variable_reference .
   70 expression: variable_reference .

    SEMICOLON  reduce using rule 59 (simple_statement)
    SEMICOLON  [reduce using rule 70 (expression)]
    $default   reduce using rule 70 (expression)


State 96

   60 simple_statement: KWPRINT expression .
   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137

    $default  reduce using rule 60 (simple_statement)


State 97

   78 expression: boolean_expression .

    $default  reduce using rule 78 (expression)


State 98

   62 variable_reference: IDENT .
   64 array_reference: IDENT . array_extend

    BRACKETLEFT  shift, and go to state 103

    $default  reduce using rule 62 (variable_reference)

    array_extend  go to state 104


State 99

   61 simple_statement: KWREAD variable_reference .

    $default  reduce using rule 61 (simple_statement)


State 100

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression
   96 return_statement: KWRETURN expression .

    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137

    $default  reduce using rule 96 (return_statement)


State 101

   78 expression: boolean_expression .
   94 while_statement: KWWHILE boolean_expression . KWDO statement_list KWEND KWDO

    KWDO  shift, and go to state 139

    $default  reduce using rule 78 (expression)


State 102

   88 function_invocation_statement: IDENT BRACELEFT . expression_list BRACERIGHT

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    $default  reduce using rule 97 (epsilon)

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 140
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94
    expression_list                go to state 141
    epsilon                        go to state 142


State 103

   65 array_extend: BRACKETLEFT . expression BRACKETRIGHT

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 143
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 104

   64 array_reference: IDENT array_extend .
   66 array_extend: array_extend . BRACKETLEFT expression BRACKETRIGHT

    BRACKETLEFT  shift, and go to state 144

    $default  reduce using rule 64 (array_reference)


State 105

   56 compound_statement: KWBEGIN var_const_decl_list statement_list KWEND .

    $default  reduce using rule 56 (compound_statement)


State 106

   46 statement_list: statement_list statement .

    $default  reduce using rule 46 (statement_list)


State 107

   50 statement: simple_statement SEMICOLON .

    $default  reduce using rule 50 (statement)


State 108

   57 simple_statement: variable_reference ASSIGN . expression_list
   58                 | variable_reference ASSIGN . IDENT array_reference

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 145
    STRING     shift, and go to state 40

    $default  reduce using rule 97 (epsilon)

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 140
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94
    expression_list                go to state 146
    epsilon                        go to state 142


State 109

   55 statement: function_invocation_statement SEMICOLON .

    $default  reduce using rule 55 (statement)


State 110

   54 statement: return_statement SEMICOLON .

    $default  reduce using rule 54 (statement)


State 111

   37 array_dimension_decl: INTEGER KWTO INTEGER . KWOF more_array_or_not

    KWOF  shift, and go to state 147


State 112

   36 array_dimension_decl: array_dimension_decl INTEGER KWTO . INTEGER KWOF more_array_or_not

    INTEGER  shift, and go to state 148


State 113

   35 array_decl: KWVAR identifier_list COLON KWARRAY array_dimension_decl var_type SEMICOLON .

    $default  reduce using rule 35 (array_decl)


State 114

   26 func_type: COLON KWARRAY . array_dimension_decl var_type

    INTEGER  shift, and go to state 48

    array_dimension_decl  go to state 149


State 115

   24 func_type: COLON KWBOOLEAN .

    $default  reduce using rule 24 (func_type)


State 116

   22 func_type: COLON KWINTEGER .

    $default  reduce using rule 22 (func_type)


State 117

   23 func_type: COLON KWREAL .

    $default  reduce using rule 23 (func_type)


State 118

   25 func_type: COLON KWSTRING .

    $default  reduce using rule 25 (func_type)


State 119

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON . compound_statement KWEND IDENT

    KWBEGIN  shift, and go to state 27

    compound_statement  go to state 150


State 120

   35 array_decl: KWVAR identifier_list . COLON KWARRAY array_dimension_decl var_type SEMICOLON

    COLON  shift, and go to state 151


State 121

   95 for_statement: KWFOR IDENT ASSIGN . INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO

    INTEGER  shift, and go to state 152


State 122

   68 expression: BRACELEFT expression . BRACERIGHT
   73           | expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    BRACERIGHT    shift, and go to state 153
    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137


State 123

   67 expression: MINUS BRACELEFT . expression BRACERIGHT

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 154
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 124

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   79           | NOT expression .
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    AND  shift, and go to state 136
    OR   shift, and go to state 137

    $default  reduce using rule 79 (expression)


State 125

   82 boolean_expression: expression LESS . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 155
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 126

   83 boolean_expression: expression LESSEQUAL . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 156
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 127

   87 boolean_expression: expression LESSGREATER . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 157
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 128

   85 boolean_expression: expression GREATEREQUAL . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 158
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 129

   86 boolean_expression: expression GREATER . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 159
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 130

   84 boolean_expression: expression EQUAL . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 160
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 131

   76 expression: expression PLUS . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 161
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 132

   77 expression: expression MINUS . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 162
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 133

   73 expression: expression MULTIPLY . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 163
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 134

   74 expression: expression DIVIDE . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 164
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 135

   75 expression: expression MOD . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 165
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 136

   80 expression: expression AND . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 166
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 137

   81 expression: expression OR . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 167
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 138

   92 conditional_statement: KWIF boolean_expression KWTHEN . statement_list KWELSE statement_list KWEND KWIF
   93                      | KWIF boolean_expression KWTHEN . statement_list KWEND KWIF

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    KWBEGIN   [reduce using rule 97 (epsilon)]
    KWFOR     [reduce using rule 97 (epsilon)]
    KWIF      [reduce using rule 97 (epsilon)]
    KWPRINT   [reduce using rule 97 (epsilon)]
    KWREAD    [reduce using rule 97 (epsilon)]
    KWRETURN  [reduce using rule 97 (epsilon)]
    KWWHILE   [reduce using rule 97 (epsilon)]
    IDENT     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    statement_list                 go to state 168
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72
    epsilon                        go to state 73


State 139

   94 while_statement: KWWHILE boolean_expression KWDO . statement_list KWEND KWDO

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    KWBEGIN   [reduce using rule 97 (epsilon)]
    KWFOR     [reduce using rule 97 (epsilon)]
    KWIF      [reduce using rule 97 (epsilon)]
    KWPRINT   [reduce using rule 97 (epsilon)]
    KWREAD    [reduce using rule 97 (epsilon)]
    KWRETURN  [reduce using rule 97 (epsilon)]
    KWWHILE   [reduce using rule 97 (epsilon)]
    IDENT     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    statement_list                 go to state 169
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72
    epsilon                        go to state 73


State 140

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression
   90 expression_list: expression .

    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137

    $default  reduce using rule 90 (expression_list)


State 141

   88 function_invocation_statement: IDENT BRACELEFT expression_list . BRACERIGHT
   89 expression_list: expression_list . COMMA expression

    COMMA       shift, and go to state 170
    BRACERIGHT  shift, and go to state 171


State 142

   91 expression_list: epsilon .

    $default  reduce using rule 91 (expression_list)


State 143

   65 array_extend: BRACKETLEFT expression . BRACKETRIGHT
   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    BRACKETRIGHT  shift, and go to state 172
    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137


State 144

   66 array_extend: array_extend BRACKETLEFT . expression BRACKETRIGHT

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 173
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 145

   58 simple_statement: variable_reference ASSIGN IDENT . array_reference
   62 variable_reference: IDENT .
   64 array_reference: IDENT . array_extend
   88 function_invocation_statement: IDENT . BRACELEFT expression_list BRACERIGHT

    BRACELEFT    shift, and go to state 102
    BRACKETLEFT  shift, and go to state 103
    IDENT        shift, and go to state 174

    $default  reduce using rule 62 (variable_reference)

    array_reference  go to state 175
    array_extend     go to state 104


State 146

   57 simple_statement: variable_reference ASSIGN expression_list .
   89 expression_list: expression_list . COMMA expression

    COMMA  shift, and go to state 170

    $default  reduce using rule 57 (simple_statement)


State 147

   37 array_dimension_decl: INTEGER KWTO INTEGER KWOF . more_array_or_not

    KWARRAY  shift, and go to state 176

    KWARRAY   [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    more_array_or_not  go to state 177
    epsilon            go to state 178


State 148

   36 array_dimension_decl: array_dimension_decl INTEGER KWTO INTEGER . KWOF more_array_or_not

    KWOF  shift, and go to state 179


State 149

   26 func_type: COLON KWARRAY array_dimension_decl . var_type
   36 array_dimension_decl: array_dimension_decl . INTEGER KWTO INTEGER KWOF more_array_or_not

    KWARRAY    shift, and go to state 75
    KWBOOLEAN  shift, and go to state 32
    KWINTEGER  shift, and go to state 33
    KWREAL     shift, and go to state 34
    KWSTRING   shift, and go to state 35
    INTEGER    shift, and go to state 76

    $default  reduce using rule 34 (var_type)

    var_type  go to state 180


State 150

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement . KWEND IDENT

    KWEND  shift, and go to state 181


State 151

   35 array_decl: KWVAR identifier_list COLON . KWARRAY array_dimension_decl var_type SEMICOLON

    KWARRAY  shift, and go to state 182


State 152

   95 for_statement: KWFOR IDENT ASSIGN INTEGER . KWTO INTEGER KWDO statement_list KWEND KWDO

    KWTO  shift, and go to state 183


State 153

   68 expression: BRACELEFT expression BRACERIGHT .

    $default  reduce using rule 68 (expression)


State 154

   67 expression: MINUS BRACELEFT expression . BRACERIGHT
   73           | expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    BRACERIGHT    shift, and go to state 184
    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137


State 155

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   82                   | expression LESS expression .
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 131
    MINUS     shift, and go to state 132
    MULTIPLY  shift, and go to state 133
    DIVIDE    shift, and go to state 134
    MOD       shift, and go to state 135
    AND       shift, and go to state 136
    OR        shift, and go to state 137

    $default  reduce using rule 82 (boolean_expression)


State 156

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   83                   | expression LESSEQUAL expression .
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 131
    MINUS     shift, and go to state 132
    MULTIPLY  shift, and go to state 133
    DIVIDE    shift, and go to state 134
    MOD       shift, and go to state 135
    AND       shift, and go to state 136
    OR        shift, and go to state 137

    $default  reduce using rule 83 (boolean_expression)


State 157

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression
   87                   | expression LESSGREATER expression .

    PLUS      shift, and go to state 131
    MINUS     shift, and go to state 132
    MULTIPLY  shift, and go to state 133
    DIVIDE    shift, and go to state 134
    MOD       shift, and go to state 135
    AND       shift, and go to state 136
    OR        shift, and go to state 137

    $default  reduce using rule 87 (boolean_expression)


State 158

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   85                   | expression GREATEREQUAL expression .
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 131
    MINUS     shift, and go to state 132
    MULTIPLY  shift, and go to state 133
    DIVIDE    shift, and go to state 134
    MOD       shift, and go to state 135
    AND       shift, and go to state 136
    OR        shift, and go to state 137

    $default  reduce using rule 85 (boolean_expression)


State 159

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   86                   | expression GREATER expression .
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 131
    MINUS     shift, and go to state 132
    MULTIPLY  shift, and go to state 133
    DIVIDE    shift, and go to state 134
    MOD       shift, and go to state 135
    AND       shift, and go to state 136
    OR        shift, and go to state 137

    $default  reduce using rule 86 (boolean_expression)


State 160

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   84                   | expression EQUAL expression .
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    PLUS      shift, and go to state 131
    MINUS     shift, and go to state 132
    MULTIPLY  shift, and go to state 133
    DIVIDE    shift, and go to state 134
    MOD       shift, and go to state 135
    AND       shift, and go to state 136
    OR        shift, and go to state 137

    $default  reduce using rule 84 (boolean_expression)


State 161

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   76           | expression PLUS expression .
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    MULTIPLY  shift, and go to state 133
    DIVIDE    shift, and go to state 134
    MOD       shift, and go to state 135
    AND       shift, and go to state 136
    OR        shift, and go to state 137

    $default  reduce using rule 76 (expression)


State 162

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   77           | expression MINUS expression .
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    MULTIPLY  shift, and go to state 133
    DIVIDE    shift, and go to state 134
    MOD       shift, and go to state 135
    AND       shift, and go to state 136
    OR        shift, and go to state 137

    $default  reduce using rule 77 (expression)


State 163

   73 expression: expression . MULTIPLY expression
   73           | expression MULTIPLY expression .
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    AND  shift, and go to state 136
    OR   shift, and go to state 137

    $default  reduce using rule 73 (expression)


State 164

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   74           | expression DIVIDE expression .
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    AND  shift, and go to state 136
    OR   shift, and go to state 137

    $default  reduce using rule 74 (expression)


State 165

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   75           | expression MOD expression .
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    AND  shift, and go to state 136
    OR   shift, and go to state 137

    $default  reduce using rule 75 (expression)


State 166

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   80           | expression AND expression .
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    $default  reduce using rule 80 (expression)


State 167

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   81           | expression OR expression .
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    $default  reduce using rule 81 (expression)


State 168

   46 statement_list: statement_list . statement
   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list . KWELSE statement_list KWEND KWIF
   93                      | KWIF boolean_expression KWTHEN statement_list . KWEND KWIF

    KWBEGIN   shift, and go to state 27
    KWELSE    shift, and go to state 185
    KWEND     shift, and go to state 186
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    statement                      go to state 106
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72


State 169

   46 statement_list: statement_list . statement
   94 while_statement: KWWHILE boolean_expression KWDO statement_list . KWEND KWDO

    KWBEGIN   shift, and go to state 27
    KWEND     shift, and go to state 187
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    statement                      go to state 106
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72


State 170

   89 expression_list: expression_list COMMA . expression

    BRACELEFT  shift, and go to state 86
    MINUS      shift, and go to state 87
    NOT        shift, and go to state 88
    KWTRUE     shift, and go to state 36
    KWFALSE    shift, and go to state 37
    INTEGER    shift, and go to state 38
    REAL       shift, and go to state 39
    IDENT      shift, and go to state 61
    STRING     shift, and go to state 40

    literal_constant_list          go to state 89
    variable_reference             go to state 90
    array_reference                go to state 91
    expression                     go to state 188
    boolean_expression             go to state 97
    function_invocation_statement  go to state 94


State 171

   88 function_invocation_statement: IDENT BRACELEFT expression_list BRACERIGHT .

    $default  reduce using rule 88 (function_invocation_statement)


State 172

   65 array_extend: BRACKETLEFT expression BRACKETRIGHT .

    $default  reduce using rule 65 (array_extend)


State 173

   66 array_extend: array_extend BRACKETLEFT expression . BRACKETRIGHT
   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression

    BRACKETRIGHT  shift, and go to state 189
    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137


State 174

   64 array_reference: IDENT . array_extend

    BRACKETLEFT  shift, and go to state 103

    array_extend  go to state 104


State 175

   58 simple_statement: variable_reference ASSIGN IDENT array_reference .

    $default  reduce using rule 58 (simple_statement)


State 176

   38 more_array_or_not: KWARRAY .

    $default  reduce using rule 38 (more_array_or_not)


State 177

   37 array_dimension_decl: INTEGER KWTO INTEGER KWOF more_array_or_not .

    $default  reduce using rule 37 (array_dimension_decl)


State 178

   39 more_array_or_not: epsilon .

    $default  reduce using rule 39 (more_array_or_not)


State 179

   36 array_dimension_decl: array_dimension_decl INTEGER KWTO INTEGER KWOF . more_array_or_not

    KWARRAY  shift, and go to state 176

    KWARRAY   [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    more_array_or_not  go to state 190
    epsilon            go to state 178


State 180

   26 func_type: COLON KWARRAY array_dimension_decl var_type .

    $default  reduce using rule 26 (func_type)


State 181

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND . IDENT

    IDENT  shift, and go to state 191


State 182

   35 array_decl: KWVAR identifier_list COLON KWARRAY . array_dimension_decl var_type SEMICOLON

    INTEGER  shift, and go to state 48

    array_dimension_decl  go to state 49


State 183

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO . INTEGER KWDO statement_list KWEND KWDO

    INTEGER  shift, and go to state 192


State 184

   67 expression: MINUS BRACELEFT expression BRACERIGHT .

    $default  reduce using rule 67 (expression)


State 185

   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE . statement_list KWEND KWIF

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    KWBEGIN   [reduce using rule 97 (epsilon)]
    KWFOR     [reduce using rule 97 (epsilon)]
    KWIF      [reduce using rule 97 (epsilon)]
    KWPRINT   [reduce using rule 97 (epsilon)]
    KWREAD    [reduce using rule 97 (epsilon)]
    KWRETURN  [reduce using rule 97 (epsilon)]
    KWWHILE   [reduce using rule 97 (epsilon)]
    IDENT     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    statement_list                 go to state 193
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72
    epsilon                        go to state 73


State 186

   93 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWEND . KWIF

    KWIF  shift, and go to state 194


State 187

   94 while_statement: KWWHILE boolean_expression KWDO statement_list KWEND . KWDO

    KWDO  shift, and go to state 195


State 188

   73 expression: expression . MULTIPLY expression
   74           | expression . DIVIDE expression
   75           | expression . MOD expression
   76           | expression . PLUS expression
   77           | expression . MINUS expression
   80           | expression . AND expression
   81           | expression . OR expression
   82 boolean_expression: expression . LESS expression
   83                   | expression . LESSEQUAL expression
   84                   | expression . EQUAL expression
   85                   | expression . GREATEREQUAL expression
   86                   | expression . GREATER expression
   87                   | expression . LESSGREATER expression
   89 expression_list: expression_list COMMA expression .

    LESS          shift, and go to state 125
    LESSEQUAL     shift, and go to state 126
    LESSGREATER   shift, and go to state 127
    GREATEREQUAL  shift, and go to state 128
    GREATER       shift, and go to state 129
    EQUAL         shift, and go to state 130
    PLUS          shift, and go to state 131
    MINUS         shift, and go to state 132
    MULTIPLY      shift, and go to state 133
    DIVIDE        shift, and go to state 134
    MOD           shift, and go to state 135
    AND           shift, and go to state 136
    OR            shift, and go to state 137

    $default  reduce using rule 89 (expression_list)


State 189

   66 array_extend: array_extend BRACKETLEFT expression BRACKETRIGHT .

    $default  reduce using rule 66 (array_extend)


State 190

   36 array_dimension_decl: array_dimension_decl INTEGER KWTO INTEGER KWOF more_array_or_not .

    $default  reduce using rule 36 (array_dimension_decl)


State 191

   13 func_decl: IDENT BRACELEFT arg_lists BRACERIGHT func_type SEMICOLON compound_statement KWEND IDENT .

    $default  reduce using rule 13 (func_decl)


State 192

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER . KWDO statement_list KWEND KWDO

    KWDO  shift, and go to state 196


State 193

   46 statement_list: statement_list . statement
   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE statement_list . KWEND KWIF

    KWBEGIN   shift, and go to state 27
    KWEND     shift, and go to state 197
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    statement                      go to state 106
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72


State 194

   93 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWEND KWIF .

    $default  reduce using rule 93 (conditional_statement)


State 195

   94 while_statement: KWWHILE boolean_expression KWDO statement_list KWEND KWDO .

    $default  reduce using rule 94 (while_statement)


State 196

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO . statement_list KWEND KWDO

    KWBEGIN   shift, and go to state 27
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    KWBEGIN   [reduce using rule 97 (epsilon)]
    KWFOR     [reduce using rule 97 (epsilon)]
    KWIF      [reduce using rule 97 (epsilon)]
    KWPRINT   [reduce using rule 97 (epsilon)]
    KWREAD    [reduce using rule 97 (epsilon)]
    KWRETURN  [reduce using rule 97 (epsilon)]
    KWWHILE   [reduce using rule 97 (epsilon)]
    IDENT     [reduce using rule 97 (epsilon)]
    $default  reduce using rule 97 (epsilon)

    statement_list                 go to state 198
    statement                      go to state 63
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72
    epsilon                        go to state 73


State 197

   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE statement_list KWEND . KWIF

    KWIF  shift, and go to state 199


State 198

   46 statement_list: statement_list . statement
   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list . KWEND KWDO

    KWBEGIN   shift, and go to state 27
    KWEND     shift, and go to state 200
    KWFOR     shift, and go to state 55
    KWIF      shift, and go to state 56
    KWPRINT   shift, and go to state 57
    KWREAD    shift, and go to state 58
    KWRETURN  shift, and go to state 59
    KWWHILE   shift, and go to state 60
    IDENT     shift, and go to state 61

    statement                      go to state 106
    compound_statement             go to state 64
    simple_statement               go to state 65
    variable_reference             go to state 66
    array_reference                go to state 67
    function_invocation_statement  go to state 68
    conditional_statement          go to state 69
    while_statement                go to state 70
    for_statement                  go to state 71
    return_statement               go to state 72


State 199

   92 conditional_statement: KWIF boolean_expression KWTHEN statement_list KWELSE statement_list KWEND KWIF .

    $default  reduce using rule 92 (conditional_statement)


State 200

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND . KWDO

    KWDO  shift, and go to state 201


State 201

   95 for_statement: KWFOR IDENT ASSIGN INTEGER KWTO INTEGER KWDO statement_list KWEND KWDO .

    $default  reduce using rule 95 (for_statement)
