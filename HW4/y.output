   0  $accept : program $end

   1  $$1 :

   2  $$2 :

   3  program : ID $$1 MK_SEMICOLON $$2 program_body END ID

   4  program_body : opt_decl_list opt_func_decl_list compound_stmt

   5  opt_decl_list : decl_list
   6                |

   7  decl_list : decl_list decl
   8            | decl

   9  $$3 :

  10  decl : VAR id_list MK_COLON scalar_type $$3 MK_SEMICOLON
  11       | VAR id_list MK_COLON array_type MK_SEMICOLON

  12  $$4 :

  13  decl : VAR id_list MK_COLON literal_const $$4 MK_SEMICOLON

  14  int_const : INT_CONST
  15            | OCTAL_CONST

  16  literal_const : int_const
  17                | OP_SUB int_const
  18                | FLOAT_CONST
  19                | OP_SUB FLOAT_CONST
  20                | SCIENTIFIC
  21                | OP_SUB SCIENTIFIC
  22                | STR_CONST
  23                | TRUE
  24                | FALSE

  25  opt_func_decl_list : func_decl_list
  26                     |

  27  func_decl_list : func_decl_list func_decl
  28                 | func_decl

  29  $$5 :

  30  $$6 :

  31  $$7 :

  32  $$8 :

  33  func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt END $$8 ID

  34  opt_param_list : param_list
  35                 |

  36  param_list : param_list MK_SEMICOLON param
  37             | param

  38  param : id_list MK_COLON type

  39  id_list : id_list MK_COMMA ID
  40          | ID

  41  opt_type : MK_COLON type
  42           |

  43  type : scalar_type
  44       | array_type

  45  scalar_type : INTEGER
  46              | REAL
  47              | BOOLEAN
  48              | STRING

  49  $$9 :

  50  array_type : ARRAY $$9 int_const TO int_const OF type

  51  stmt : compound_stmt
  52       | simple_stmt
  53       | cond_stmt
  54       | while_stmt
  55       | for_stmt
  56       | return_stmt
  57       | proc_call_stmt

  58  $$10 :

  59  $$11 :

  60  compound_stmt : BEG $$10 opt_decl_list opt_stmt_list $$11 END

  61  opt_stmt_list : stmt_list
  62                |

  63  stmt_list : stmt_list stmt
  64            | stmt

  65  $$12 :

  66  simple_stmt : var_ref $$12 OP_ASSIGN boolean_expr MK_SEMICOLON
  67              | PRINT boolean_expr MK_SEMICOLON
  68              | READ boolean_expr MK_SEMICOLON

  69  proc_call_stmt : ID MK_LPAREN opt_boolean_expr_list MK_RPAREN MK_SEMICOLON

  70  cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE opt_stmt_list END IF
  71            | IF boolean_expr THEN opt_stmt_list END IF

  72  while_stmt : WHILE boolean_expr DO opt_stmt_list END DO

  73  $$13 :

  74  for_stmt : FOR ID $$13 OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO

  75  return_stmt : RETURN boolean_expr MK_SEMICOLON

  76  opt_boolean_expr_list : boolean_expr_list
  77                        |

  78  boolean_expr_list : boolean_expr_list MK_COMMA boolean_expr
  79                    | boolean_expr

  80  boolean_expr : boolean_expr OP_OR boolean_term
  81               | boolean_term

  82  boolean_term : boolean_term OP_AND boolean_factor
  83               | boolean_factor

  84  boolean_factor : OP_NOT boolean_factor
  85                 | relop_expr

  86  relop_expr : expr rel_op expr
  87             | expr

  88  rel_op : OP_LT
  89         | OP_LE
  90         | OP_EQ
  91         | OP_GE
  92         | OP_GT
  93         | OP_NE

  94  expr : expr add_op term
  95       | term

  96  add_op : OP_ADD
  97         | OP_SUB

  98  term : term mul_op factor
  99       | factor

 100  mul_op : OP_MUL
 101         | OP_DIV
 102         | OP_MOD

 103  factor : var_ref
 104         | OP_SUB var_ref
 105         | MK_LPAREN boolean_expr MK_RPAREN
 106         | OP_SUB MK_LPAREN boolean_expr MK_RPAREN

 107  $$14 :

 108  factor : ID $$14 MK_LPAREN opt_boolean_expr_list MK_RPAREN
 109         | OP_SUB ID MK_LPAREN opt_boolean_expr_list MK_RPAREN
 110         | literal_const

 111  var_ref : ID
 112          | var_ref dim

 113  dim : MK_LB boolean_expr MK_RB

state 0
	$accept : . program $end  (0)

	ID  shift 1
	.  error

	program  goto 2


state 1
	program : ID . $$1 MK_SEMICOLON $$2 program_body END ID  (3)
	$$1 : .  (1)

	.  reduce 1

	$$1  goto 3


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	program : ID $$1 . MK_SEMICOLON $$2 program_body END ID  (3)

	MK_SEMICOLON  shift 4
	.  error


state 4
	program : ID $$1 MK_SEMICOLON . $$2 program_body END ID  (3)
	$$2 : .  (2)

	.  reduce 2

	$$2  goto 5


state 5
	program : ID $$1 MK_SEMICOLON $$2 . program_body END ID  (3)
	opt_decl_list : .  (6)

	VAR  shift 6
	BEG  reduce 6
	ID  reduce 6

	decl  goto 7
	program_body  goto 8
	opt_decl_list  goto 9
	decl_list  goto 10


state 6
	decl : VAR . id_list MK_COLON scalar_type $$3 MK_SEMICOLON  (10)
	decl : VAR . id_list MK_COLON array_type MK_SEMICOLON  (11)
	decl : VAR . id_list MK_COLON literal_const $$4 MK_SEMICOLON  (13)

	ID  shift 11
	.  error

	id_list  goto 12


state 7
	decl_list : decl .  (8)

	.  reduce 8


state 8
	program : ID $$1 MK_SEMICOLON $$2 program_body . END ID  (3)

	END  shift 13
	.  error


state 9
	program_body : opt_decl_list . opt_func_decl_list compound_stmt  (4)
	opt_func_decl_list : .  (26)

	ID  shift 14
	BEG  reduce 26

	func_decl  goto 15
	opt_func_decl_list  goto 16
	func_decl_list  goto 17


state 10
	opt_decl_list : decl_list .  (5)
	decl_list : decl_list . decl  (7)

	VAR  shift 6
	BEG  reduce 5
	END  reduce 5
	FOR  reduce 5
	IF  reduce 5
	PRINT  reduce 5
	READ  reduce 5
	RETURN  reduce 5
	WHILE  reduce 5
	ID  reduce 5

	decl  goto 18


state 11
	id_list : ID .  (40)

	.  reduce 40


state 12
	decl : VAR id_list . MK_COLON scalar_type $$3 MK_SEMICOLON  (10)
	decl : VAR id_list . MK_COLON array_type MK_SEMICOLON  (11)
	decl : VAR id_list . MK_COLON literal_const $$4 MK_SEMICOLON  (13)
	id_list : id_list . MK_COMMA ID  (39)

	MK_COMMA  shift 19
	MK_COLON  shift 20
	.  error


state 13
	program : ID $$1 MK_SEMICOLON $$2 program_body END . ID  (3)

	ID  shift 21
	.  error


state 14
	func_decl : ID . $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt END $$8 ID  (33)
	$$5 : .  (29)

	.  reduce 29

	$$5  goto 22


state 15
	func_decl_list : func_decl .  (28)

	.  reduce 28


state 16
	program_body : opt_decl_list opt_func_decl_list . compound_stmt  (4)

	BEG  shift 23
	.  error

	compound_stmt  goto 24


state 17
	opt_func_decl_list : func_decl_list .  (25)
	func_decl_list : func_decl_list . func_decl  (27)

	ID  shift 14
	BEG  reduce 25

	func_decl  goto 25


state 18
	decl_list : decl_list decl .  (7)

	.  reduce 7


state 19
	id_list : id_list MK_COMMA . ID  (39)

	ID  shift 26
	.  error


state 20
	decl : VAR id_list MK_COLON . scalar_type $$3 MK_SEMICOLON  (10)
	decl : VAR id_list MK_COLON . array_type MK_SEMICOLON  (11)
	decl : VAR id_list MK_COLON . literal_const $$4 MK_SEMICOLON  (13)

	ARRAY  shift 27
	BOOLEAN  shift 28
	FALSE  shift 29
	INTEGER  shift 30
	REAL  shift 31
	STRING  shift 32
	TRUE  shift 33
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 39
	.  error

	int_const  goto 40
	literal_const  goto 41
	scalar_type  goto 42
	array_type  goto 43


state 21
	program : ID $$1 MK_SEMICOLON $$2 program_body END ID .  (3)

	.  reduce 3


state 22
	func_decl : ID $$5 . MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt END $$8 ID  (33)

	MK_LPAREN  shift 44
	.  error


state 23
	compound_stmt : BEG . $$10 opt_decl_list opt_stmt_list $$11 END  (60)
	$$10 : .  (58)

	.  reduce 58

	$$10  goto 45


state 24
	program_body : opt_decl_list opt_func_decl_list compound_stmt .  (4)

	.  reduce 4


state 25
	func_decl_list : func_decl_list func_decl .  (27)

	.  reduce 27


state 26
	id_list : id_list MK_COMMA ID .  (39)

	.  reduce 39


state 27
	array_type : ARRAY . $$9 int_const TO int_const OF type  (50)
	$$9 : .  (49)

	.  reduce 49

	$$9  goto 46


state 28
	scalar_type : BOOLEAN .  (47)

	.  reduce 47


state 29
	literal_const : FALSE .  (24)

	.  reduce 24


state 30
	scalar_type : INTEGER .  (45)

	.  reduce 45


state 31
	scalar_type : REAL .  (46)

	.  reduce 46


state 32
	scalar_type : STRING .  (48)

	.  reduce 48


state 33
	literal_const : TRUE .  (23)

	.  reduce 23


state 34
	int_const : OCTAL_CONST .  (15)

	.  reduce 15


state 35
	int_const : INT_CONST .  (14)

	.  reduce 14


state 36
	literal_const : FLOAT_CONST .  (18)

	.  reduce 18


state 37
	literal_const : SCIENTIFIC .  (20)

	.  reduce 20


state 38
	literal_const : STR_CONST .  (22)

	.  reduce 22


state 39
	literal_const : OP_SUB . int_const  (17)
	literal_const : OP_SUB . FLOAT_CONST  (19)
	literal_const : OP_SUB . SCIENTIFIC  (21)

	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 47
	SCIENTIFIC  shift 48
	.  error

	int_const  goto 49


state 40
	literal_const : int_const .  (16)

	.  reduce 16


state 41
	decl : VAR id_list MK_COLON literal_const . $$4 MK_SEMICOLON  (13)
	$$4 : .  (12)

	.  reduce 12

	$$4  goto 50


state 42
	decl : VAR id_list MK_COLON scalar_type . $$3 MK_SEMICOLON  (10)
	$$3 : .  (9)

	.  reduce 9

	$$3  goto 51


state 43
	decl : VAR id_list MK_COLON array_type . MK_SEMICOLON  (11)

	MK_SEMICOLON  shift 52
	.  error


state 44
	func_decl : ID $$5 MK_LPAREN . opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt END $$8 ID  (33)
	opt_param_list : .  (35)

	ID  shift 11
	MK_RPAREN  reduce 35

	param  goto 53
	id_list  goto 54
	opt_param_list  goto 55
	param_list  goto 56


state 45
	compound_stmt : BEG $$10 . opt_decl_list opt_stmt_list $$11 END  (60)
	opt_decl_list : .  (6)

	VAR  shift 6
	BEG  reduce 6
	END  reduce 6
	FOR  reduce 6
	IF  reduce 6
	PRINT  reduce 6
	READ  reduce 6
	RETURN  reduce 6
	WHILE  reduce 6
	ID  reduce 6

	decl  goto 7
	opt_decl_list  goto 57
	decl_list  goto 10


state 46
	array_type : ARRAY $$9 . int_const TO int_const OF type  (50)

	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	.  error

	int_const  goto 58


state 47
	literal_const : OP_SUB FLOAT_CONST .  (19)

	.  reduce 19


state 48
	literal_const : OP_SUB SCIENTIFIC .  (21)

	.  reduce 21


state 49
	literal_const : OP_SUB int_const .  (17)

	.  reduce 17


state 50
	decl : VAR id_list MK_COLON literal_const $$4 . MK_SEMICOLON  (13)

	MK_SEMICOLON  shift 59
	.  error


state 51
	decl : VAR id_list MK_COLON scalar_type $$3 . MK_SEMICOLON  (10)

	MK_SEMICOLON  shift 60
	.  error


state 52
	decl : VAR id_list MK_COLON array_type MK_SEMICOLON .  (11)

	.  reduce 11


state 53
	param_list : param .  (37)

	.  reduce 37


state 54
	param : id_list . MK_COLON type  (38)
	id_list : id_list . MK_COMMA ID  (39)

	MK_COMMA  shift 19
	MK_COLON  shift 61
	.  error


state 55
	func_decl : ID $$5 MK_LPAREN opt_param_list . MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt END $$8 ID  (33)

	MK_RPAREN  shift 62
	.  error


state 56
	opt_param_list : param_list .  (34)
	param_list : param_list . MK_SEMICOLON param  (36)

	MK_SEMICOLON  shift 63
	MK_RPAREN  reduce 34


state 57
	compound_stmt : BEG $$10 opt_decl_list . opt_stmt_list $$11 END  (60)
	opt_stmt_list : .  (62)

	BEG  shift 23
	FOR  shift 64
	IF  shift 65
	PRINT  shift 66
	READ  shift 67
	RETURN  shift 68
	WHILE  shift 69
	ID  shift 70
	END  reduce 62

	var_ref  goto 71
	compound_stmt  goto 72
	stmt  goto 73
	simple_stmt  goto 74
	cond_stmt  goto 75
	while_stmt  goto 76
	for_stmt  goto 77
	return_stmt  goto 78
	proc_call_stmt  goto 79
	opt_stmt_list  goto 80
	stmt_list  goto 81


state 58
	array_type : ARRAY $$9 int_const . TO int_const OF type  (50)

	TO  shift 82
	.  error


state 59
	decl : VAR id_list MK_COLON literal_const $$4 MK_SEMICOLON .  (13)

	.  reduce 13


state 60
	decl : VAR id_list MK_COLON scalar_type $$3 MK_SEMICOLON .  (10)

	.  reduce 10


state 61
	param : id_list MK_COLON . type  (38)

	ARRAY  shift 27
	BOOLEAN  shift 28
	INTEGER  shift 30
	REAL  shift 31
	STRING  shift 32
	.  error

	type  goto 83
	scalar_type  goto 84
	array_type  goto 85


state 62
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN . $$6 opt_type MK_SEMICOLON $$7 compound_stmt END $$8 ID  (33)
	$$6 : .  (30)

	.  reduce 30

	$$6  goto 86


state 63
	param_list : param_list MK_SEMICOLON . param  (36)

	ID  shift 11
	.  error

	param  goto 87
	id_list  goto 54


state 64
	for_stmt : FOR . ID $$13 OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO  (74)

	ID  shift 88
	.  error


state 65
	cond_stmt : IF . boolean_expr THEN opt_stmt_list ELSE opt_stmt_list END IF  (70)
	cond_stmt : IF . boolean_expr THEN opt_stmt_list END IF  (71)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 96
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 66
	simple_stmt : PRINT . boolean_expr MK_SEMICOLON  (67)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 102
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 67
	simple_stmt : READ . boolean_expr MK_SEMICOLON  (68)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 103
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 68
	return_stmt : RETURN . boolean_expr MK_SEMICOLON  (75)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 104
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 69
	while_stmt : WHILE . boolean_expr DO opt_stmt_list END DO  (72)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 105
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 70
	proc_call_stmt : ID . MK_LPAREN opt_boolean_expr_list MK_RPAREN MK_SEMICOLON  (69)
	var_ref : ID .  (111)

	MK_LPAREN  shift 106
	OP_ASSIGN  reduce 111
	MK_LB  reduce 111


state 71
	simple_stmt : var_ref . $$12 OP_ASSIGN boolean_expr MK_SEMICOLON  (66)
	var_ref : var_ref . dim  (112)
	$$12 : .  (65)

	MK_LB  shift 107
	OP_ASSIGN  reduce 65

	$$12  goto 108
	dim  goto 109


state 72
	stmt : compound_stmt .  (51)

	.  reduce 51


state 73
	stmt_list : stmt .  (64)

	.  reduce 64


state 74
	stmt : simple_stmt .  (52)

	.  reduce 52


state 75
	stmt : cond_stmt .  (53)

	.  reduce 53


state 76
	stmt : while_stmt .  (54)

	.  reduce 54


state 77
	stmt : for_stmt .  (55)

	.  reduce 55


state 78
	stmt : return_stmt .  (56)

	.  reduce 56


state 79
	stmt : proc_call_stmt .  (57)

	.  reduce 57


state 80
	compound_stmt : BEG $$10 opt_decl_list opt_stmt_list . $$11 END  (60)
	$$11 : .  (59)

	.  reduce 59

	$$11  goto 110


state 81
	opt_stmt_list : stmt_list .  (61)
	stmt_list : stmt_list . stmt  (63)

	BEG  shift 23
	FOR  shift 64
	IF  shift 65
	PRINT  shift 66
	READ  shift 67
	RETURN  shift 68
	WHILE  shift 69
	ID  shift 70
	ELSE  reduce 61
	END  reduce 61

	var_ref  goto 71
	compound_stmt  goto 72
	stmt  goto 111
	simple_stmt  goto 74
	cond_stmt  goto 75
	while_stmt  goto 76
	for_stmt  goto 77
	return_stmt  goto 78
	proc_call_stmt  goto 79


state 82
	array_type : ARRAY $$9 int_const TO . int_const OF type  (50)

	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	.  error

	int_const  goto 112


state 83
	param : id_list MK_COLON type .  (38)

	.  reduce 38


state 84
	type : scalar_type .  (43)

	.  reduce 43


state 85
	type : array_type .  (44)

	.  reduce 44


state 86
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 . opt_type MK_SEMICOLON $$7 compound_stmt END $$8 ID  (33)
	opt_type : .  (42)

	MK_COLON  shift 113
	MK_SEMICOLON  reduce 42

	opt_type  goto 114


state 87
	param_list : param_list MK_SEMICOLON param .  (36)

	.  reduce 36


state 88
	for_stmt : FOR ID . $$13 OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO  (74)
	$$13 : .  (73)

	.  reduce 73

	$$13  goto 115


state 89
	factor : ID . $$14 MK_LPAREN opt_boolean_expr_list MK_RPAREN  (108)
	var_ref : ID .  (111)
	$$14 : .  (107)

	DO  reduce 111
	THEN  reduce 111
	OP_ADD  reduce 111
	OP_SUB  reduce 111
	OP_MUL  reduce 111
	OP_DIV  reduce 111
	OP_MOD  reduce 111
	OP_EQ  reduce 111
	OP_NE  reduce 111
	OP_GT  reduce 111
	OP_LT  reduce 111
	OP_GE  reduce 111
	OP_LE  reduce 111
	OP_AND  reduce 111
	OP_OR  reduce 111
	MK_COMMA  reduce 111
	MK_SEMICOLON  reduce 111
	MK_LPAREN  reduce 107
	MK_RPAREN  reduce 111
	MK_LB  reduce 111
	MK_RB  reduce 111

	$$14  goto 116


state 90
	literal_const : OP_SUB . int_const  (17)
	literal_const : OP_SUB . FLOAT_CONST  (19)
	literal_const : OP_SUB . SCIENTIFIC  (21)
	factor : OP_SUB . var_ref  (104)
	factor : OP_SUB . MK_LPAREN boolean_expr MK_RPAREN  (106)
	factor : OP_SUB . ID MK_LPAREN opt_boolean_expr_list MK_RPAREN  (109)

	ID  shift 117
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 47
	SCIENTIFIC  shift 48
	MK_LPAREN  shift 118
	.  error

	int_const  goto 49
	var_ref  goto 119


state 91
	boolean_factor : OP_NOT . boolean_factor  (84)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_factor  goto 120
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 92
	factor : MK_LPAREN . boolean_expr MK_RPAREN  (105)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 121
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 93
	factor : literal_const .  (110)

	.  reduce 110


state 94
	factor : var_ref .  (103)
	var_ref : var_ref . dim  (112)

	MK_LB  shift 107
	DO  reduce 103
	THEN  reduce 103
	OP_ADD  reduce 103
	OP_SUB  reduce 103
	OP_MUL  reduce 103
	OP_DIV  reduce 103
	OP_MOD  reduce 103
	OP_EQ  reduce 103
	OP_NE  reduce 103
	OP_GT  reduce 103
	OP_LT  reduce 103
	OP_GE  reduce 103
	OP_LE  reduce 103
	OP_AND  reduce 103
	OP_OR  reduce 103
	MK_COMMA  reduce 103
	MK_SEMICOLON  reduce 103
	MK_RPAREN  reduce 103
	MK_RB  reduce 103

	dim  goto 109


state 95
	term : factor .  (99)

	.  reduce 99


state 96
	cond_stmt : IF boolean_expr . THEN opt_stmt_list ELSE opt_stmt_list END IF  (70)
	cond_stmt : IF boolean_expr . THEN opt_stmt_list END IF  (71)
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)

	THEN  shift 122
	OP_OR  shift 123
	.  error


state 97
	boolean_expr : boolean_term .  (81)
	boolean_term : boolean_term . OP_AND boolean_factor  (82)

	OP_AND  shift 124
	DO  reduce 81
	THEN  reduce 81
	OP_OR  reduce 81
	MK_COMMA  reduce 81
	MK_SEMICOLON  reduce 81
	MK_RPAREN  reduce 81
	MK_RB  reduce 81


state 98
	boolean_term : boolean_factor .  (83)

	.  reduce 83


state 99
	boolean_factor : relop_expr .  (85)

	.  reduce 85


state 100
	relop_expr : expr . rel_op expr  (86)
	relop_expr : expr .  (87)
	expr : expr . add_op term  (94)

	OP_ADD  shift 125
	OP_SUB  shift 126
	OP_EQ  shift 127
	OP_NE  shift 128
	OP_GT  shift 129
	OP_LT  shift 130
	OP_GE  shift 131
	OP_LE  shift 132
	DO  reduce 87
	THEN  reduce 87
	OP_AND  reduce 87
	OP_OR  reduce 87
	MK_COMMA  reduce 87
	MK_SEMICOLON  reduce 87
	MK_RPAREN  reduce 87
	MK_RB  reduce 87

	rel_op  goto 133
	add_op  goto 134


state 101
	expr : term .  (95)
	term : term . mul_op factor  (98)

	OP_MUL  shift 135
	OP_DIV  shift 136
	OP_MOD  shift 137
	DO  reduce 95
	THEN  reduce 95
	OP_ADD  reduce 95
	OP_SUB  reduce 95
	OP_EQ  reduce 95
	OP_NE  reduce 95
	OP_GT  reduce 95
	OP_LT  reduce 95
	OP_GE  reduce 95
	OP_LE  reduce 95
	OP_AND  reduce 95
	OP_OR  reduce 95
	MK_COMMA  reduce 95
	MK_SEMICOLON  reduce 95
	MK_RPAREN  reduce 95
	MK_RB  reduce 95

	mul_op  goto 138


state 102
	simple_stmt : PRINT boolean_expr . MK_SEMICOLON  (67)
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)

	OP_OR  shift 123
	MK_SEMICOLON  shift 139
	.  error


state 103
	simple_stmt : READ boolean_expr . MK_SEMICOLON  (68)
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)

	OP_OR  shift 123
	MK_SEMICOLON  shift 140
	.  error


state 104
	return_stmt : RETURN boolean_expr . MK_SEMICOLON  (75)
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)

	OP_OR  shift 123
	MK_SEMICOLON  shift 141
	.  error


state 105
	while_stmt : WHILE boolean_expr . DO opt_stmt_list END DO  (72)
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)

	DO  shift 142
	OP_OR  shift 123
	.  error


state 106
	proc_call_stmt : ID MK_LPAREN . opt_boolean_expr_list MK_RPAREN MK_SEMICOLON  (69)
	opt_boolean_expr_list : .  (77)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	MK_RPAREN  reduce 77

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 143
	opt_boolean_expr_list  goto 144
	boolean_expr_list  goto 145
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 107
	dim : MK_LB . boolean_expr MK_RB  (113)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 146
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 108
	simple_stmt : var_ref $$12 . OP_ASSIGN boolean_expr MK_SEMICOLON  (66)

	OP_ASSIGN  shift 147
	.  error


state 109
	var_ref : var_ref dim .  (112)

	.  reduce 112


state 110
	compound_stmt : BEG $$10 opt_decl_list opt_stmt_list $$11 . END  (60)

	END  shift 148
	.  error


state 111
	stmt_list : stmt_list stmt .  (63)

	.  reduce 63


state 112
	array_type : ARRAY $$9 int_const TO int_const . OF type  (50)

	OF  shift 149
	.  error


state 113
	opt_type : MK_COLON . type  (41)

	ARRAY  shift 27
	BOOLEAN  shift 28
	INTEGER  shift 30
	REAL  shift 31
	STRING  shift 32
	.  error

	type  goto 150
	scalar_type  goto 84
	array_type  goto 85


state 114
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type . MK_SEMICOLON $$7 compound_stmt END $$8 ID  (33)

	MK_SEMICOLON  shift 151
	.  error


state 115
	for_stmt : FOR ID $$13 . OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO  (74)

	OP_ASSIGN  shift 152
	.  error


state 116
	factor : ID $$14 . MK_LPAREN opt_boolean_expr_list MK_RPAREN  (108)

	MK_LPAREN  shift 153
	.  error


state 117
	factor : OP_SUB ID . MK_LPAREN opt_boolean_expr_list MK_RPAREN  (109)
	var_ref : ID .  (111)

	MK_LPAREN  shift 154
	DO  reduce 111
	THEN  reduce 111
	OP_ADD  reduce 111
	OP_SUB  reduce 111
	OP_MUL  reduce 111
	OP_DIV  reduce 111
	OP_MOD  reduce 111
	OP_EQ  reduce 111
	OP_NE  reduce 111
	OP_GT  reduce 111
	OP_LT  reduce 111
	OP_GE  reduce 111
	OP_LE  reduce 111
	OP_AND  reduce 111
	OP_OR  reduce 111
	MK_COMMA  reduce 111
	MK_SEMICOLON  reduce 111
	MK_RPAREN  reduce 111
	MK_LB  reduce 111
	MK_RB  reduce 111


state 118
	factor : OP_SUB MK_LPAREN . boolean_expr MK_RPAREN  (106)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 155
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 119
	factor : OP_SUB var_ref .  (104)
	var_ref : var_ref . dim  (112)

	MK_LB  shift 107
	DO  reduce 104
	THEN  reduce 104
	OP_ADD  reduce 104
	OP_SUB  reduce 104
	OP_MUL  reduce 104
	OP_DIV  reduce 104
	OP_MOD  reduce 104
	OP_EQ  reduce 104
	OP_NE  reduce 104
	OP_GT  reduce 104
	OP_LT  reduce 104
	OP_GE  reduce 104
	OP_LE  reduce 104
	OP_AND  reduce 104
	OP_OR  reduce 104
	MK_COMMA  reduce 104
	MK_SEMICOLON  reduce 104
	MK_RPAREN  reduce 104
	MK_RB  reduce 104

	dim  goto 109


state 120
	boolean_factor : OP_NOT boolean_factor .  (84)

	.  reduce 84


state 121
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)
	factor : MK_LPAREN boolean_expr . MK_RPAREN  (105)

	OP_OR  shift 123
	MK_RPAREN  shift 156
	.  error


state 122
	cond_stmt : IF boolean_expr THEN . opt_stmt_list ELSE opt_stmt_list END IF  (70)
	cond_stmt : IF boolean_expr THEN . opt_stmt_list END IF  (71)
	opt_stmt_list : .  (62)

	BEG  shift 23
	FOR  shift 64
	IF  shift 65
	PRINT  shift 66
	READ  shift 67
	RETURN  shift 68
	WHILE  shift 69
	ID  shift 70
	ELSE  reduce 62
	END  reduce 62

	var_ref  goto 71
	compound_stmt  goto 72
	stmt  goto 73
	simple_stmt  goto 74
	cond_stmt  goto 75
	while_stmt  goto 76
	for_stmt  goto 77
	return_stmt  goto 78
	proc_call_stmt  goto 79
	opt_stmt_list  goto 157
	stmt_list  goto 81


state 123
	boolean_expr : boolean_expr OP_OR . boolean_term  (80)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_term  goto 158
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 124
	boolean_term : boolean_term OP_AND . boolean_factor  (82)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_factor  goto 159
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 125
	add_op : OP_ADD .  (96)

	.  reduce 96


state 126
	add_op : OP_SUB .  (97)

	.  reduce 97


state 127
	rel_op : OP_EQ .  (90)

	.  reduce 90


state 128
	rel_op : OP_NE .  (93)

	.  reduce 93


state 129
	rel_op : OP_GT .  (92)

	.  reduce 92


state 130
	rel_op : OP_LT .  (88)

	.  reduce 88


state 131
	rel_op : OP_GE .  (91)

	.  reduce 91


state 132
	rel_op : OP_LE .  (89)

	.  reduce 89


state 133
	relop_expr : expr rel_op . expr  (86)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	expr  goto 160
	term  goto 101


state 134
	expr : expr add_op . term  (94)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	term  goto 161


state 135
	mul_op : OP_MUL .  (100)

	.  reduce 100


state 136
	mul_op : OP_DIV .  (101)

	.  reduce 101


state 137
	mul_op : OP_MOD .  (102)

	.  reduce 102


state 138
	term : term mul_op . factor  (98)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 162


state 139
	simple_stmt : PRINT boolean_expr MK_SEMICOLON .  (67)

	.  reduce 67


state 140
	simple_stmt : READ boolean_expr MK_SEMICOLON .  (68)

	.  reduce 68


state 141
	return_stmt : RETURN boolean_expr MK_SEMICOLON .  (75)

	.  reduce 75


state 142
	while_stmt : WHILE boolean_expr DO . opt_stmt_list END DO  (72)
	opt_stmt_list : .  (62)

	BEG  shift 23
	FOR  shift 64
	IF  shift 65
	PRINT  shift 66
	READ  shift 67
	RETURN  shift 68
	WHILE  shift 69
	ID  shift 70
	END  reduce 62

	var_ref  goto 71
	compound_stmt  goto 72
	stmt  goto 73
	simple_stmt  goto 74
	cond_stmt  goto 75
	while_stmt  goto 76
	for_stmt  goto 77
	return_stmt  goto 78
	proc_call_stmt  goto 79
	opt_stmt_list  goto 163
	stmt_list  goto 81


state 143
	boolean_expr_list : boolean_expr .  (79)
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)

	OP_OR  shift 123
	MK_COMMA  reduce 79
	MK_RPAREN  reduce 79


state 144
	proc_call_stmt : ID MK_LPAREN opt_boolean_expr_list . MK_RPAREN MK_SEMICOLON  (69)

	MK_RPAREN  shift 164
	.  error


state 145
	opt_boolean_expr_list : boolean_expr_list .  (76)
	boolean_expr_list : boolean_expr_list . MK_COMMA boolean_expr  (78)

	MK_COMMA  shift 165
	MK_RPAREN  reduce 76


state 146
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)
	dim : MK_LB boolean_expr . MK_RB  (113)

	OP_OR  shift 123
	MK_RB  shift 166
	.  error


state 147
	simple_stmt : var_ref $$12 OP_ASSIGN . boolean_expr MK_SEMICOLON  (66)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 167
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 148
	compound_stmt : BEG $$10 opt_decl_list opt_stmt_list $$11 END .  (60)

	.  reduce 60


state 149
	array_type : ARRAY $$9 int_const TO int_const OF . type  (50)

	ARRAY  shift 27
	BOOLEAN  shift 28
	INTEGER  shift 30
	REAL  shift 31
	STRING  shift 32
	.  error

	type  goto 168
	scalar_type  goto 84
	array_type  goto 85


state 150
	opt_type : MK_COLON type .  (41)

	.  reduce 41


state 151
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON . $$7 compound_stmt END $$8 ID  (33)
	$$7 : .  (31)

	.  reduce 31

	$$7  goto 169


state 152
	for_stmt : FOR ID $$13 OP_ASSIGN . int_const TO int_const DO opt_stmt_list END DO  (74)

	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	.  error

	int_const  goto 170


state 153
	factor : ID $$14 MK_LPAREN . opt_boolean_expr_list MK_RPAREN  (108)
	opt_boolean_expr_list : .  (77)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	MK_RPAREN  reduce 77

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 143
	opt_boolean_expr_list  goto 171
	boolean_expr_list  goto 145
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 154
	factor : OP_SUB ID MK_LPAREN . opt_boolean_expr_list MK_RPAREN  (109)
	opt_boolean_expr_list : .  (77)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	MK_RPAREN  reduce 77

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 143
	opt_boolean_expr_list  goto 172
	boolean_expr_list  goto 145
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 155
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)
	factor : OP_SUB MK_LPAREN boolean_expr . MK_RPAREN  (106)

	OP_OR  shift 123
	MK_RPAREN  shift 173
	.  error


state 156
	factor : MK_LPAREN boolean_expr MK_RPAREN .  (105)

	.  reduce 105


state 157
	cond_stmt : IF boolean_expr THEN opt_stmt_list . ELSE opt_stmt_list END IF  (70)
	cond_stmt : IF boolean_expr THEN opt_stmt_list . END IF  (71)

	ELSE  shift 174
	END  shift 175
	.  error


state 158
	boolean_expr : boolean_expr OP_OR boolean_term .  (80)
	boolean_term : boolean_term . OP_AND boolean_factor  (82)

	OP_AND  shift 124
	DO  reduce 80
	THEN  reduce 80
	OP_OR  reduce 80
	MK_COMMA  reduce 80
	MK_SEMICOLON  reduce 80
	MK_RPAREN  reduce 80
	MK_RB  reduce 80


state 159
	boolean_term : boolean_term OP_AND boolean_factor .  (82)

	.  reduce 82


state 160
	relop_expr : expr rel_op expr .  (86)
	expr : expr . add_op term  (94)

	OP_ADD  shift 125
	OP_SUB  shift 126
	DO  reduce 86
	THEN  reduce 86
	OP_AND  reduce 86
	OP_OR  reduce 86
	MK_COMMA  reduce 86
	MK_SEMICOLON  reduce 86
	MK_RPAREN  reduce 86
	MK_RB  reduce 86

	add_op  goto 134


state 161
	expr : expr add_op term .  (94)
	term : term . mul_op factor  (98)

	OP_MUL  shift 135
	OP_DIV  shift 136
	OP_MOD  shift 137
	DO  reduce 94
	THEN  reduce 94
	OP_ADD  reduce 94
	OP_SUB  reduce 94
	OP_EQ  reduce 94
	OP_NE  reduce 94
	OP_GT  reduce 94
	OP_LT  reduce 94
	OP_GE  reduce 94
	OP_LE  reduce 94
	OP_AND  reduce 94
	OP_OR  reduce 94
	MK_COMMA  reduce 94
	MK_SEMICOLON  reduce 94
	MK_RPAREN  reduce 94
	MK_RB  reduce 94

	mul_op  goto 138


state 162
	term : term mul_op factor .  (98)

	.  reduce 98


state 163
	while_stmt : WHILE boolean_expr DO opt_stmt_list . END DO  (72)

	END  shift 176
	.  error


state 164
	proc_call_stmt : ID MK_LPAREN opt_boolean_expr_list MK_RPAREN . MK_SEMICOLON  (69)

	MK_SEMICOLON  shift 177
	.  error


state 165
	boolean_expr_list : boolean_expr_list MK_COMMA . boolean_expr  (78)

	FALSE  shift 29
	TRUE  shift 33
	ID  shift 89
	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	FLOAT_CONST  shift 36
	SCIENTIFIC  shift 37
	STR_CONST  shift 38
	OP_SUB  shift 90
	OP_NOT  shift 91
	MK_LPAREN  shift 92
	.  error

	int_const  goto 40
	literal_const  goto 93
	var_ref  goto 94
	factor  goto 95
	boolean_expr  goto 178
	boolean_term  goto 97
	boolean_factor  goto 98
	relop_expr  goto 99
	expr  goto 100
	term  goto 101


state 166
	dim : MK_LB boolean_expr MK_RB .  (113)

	.  reduce 113


state 167
	simple_stmt : var_ref $$12 OP_ASSIGN boolean_expr . MK_SEMICOLON  (66)
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)

	OP_OR  shift 123
	MK_SEMICOLON  shift 179
	.  error


state 168
	array_type : ARRAY $$9 int_const TO int_const OF type .  (50)

	.  reduce 50


state 169
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 . compound_stmt END $$8 ID  (33)

	BEG  shift 23
	.  error

	compound_stmt  goto 180


state 170
	for_stmt : FOR ID $$13 OP_ASSIGN int_const . TO int_const DO opt_stmt_list END DO  (74)

	TO  shift 181
	.  error


state 171
	factor : ID $$14 MK_LPAREN opt_boolean_expr_list . MK_RPAREN  (108)

	MK_RPAREN  shift 182
	.  error


state 172
	factor : OP_SUB ID MK_LPAREN opt_boolean_expr_list . MK_RPAREN  (109)

	MK_RPAREN  shift 183
	.  error


state 173
	factor : OP_SUB MK_LPAREN boolean_expr MK_RPAREN .  (106)

	.  reduce 106


state 174
	cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE . opt_stmt_list END IF  (70)
	opt_stmt_list : .  (62)

	BEG  shift 23
	FOR  shift 64
	IF  shift 65
	PRINT  shift 66
	READ  shift 67
	RETURN  shift 68
	WHILE  shift 69
	ID  shift 70
	END  reduce 62

	var_ref  goto 71
	compound_stmt  goto 72
	stmt  goto 73
	simple_stmt  goto 74
	cond_stmt  goto 75
	while_stmt  goto 76
	for_stmt  goto 77
	return_stmt  goto 78
	proc_call_stmt  goto 79
	opt_stmt_list  goto 184
	stmt_list  goto 81


state 175
	cond_stmt : IF boolean_expr THEN opt_stmt_list END . IF  (71)

	IF  shift 185
	.  error


state 176
	while_stmt : WHILE boolean_expr DO opt_stmt_list END . DO  (72)

	DO  shift 186
	.  error


state 177
	proc_call_stmt : ID MK_LPAREN opt_boolean_expr_list MK_RPAREN MK_SEMICOLON .  (69)

	.  reduce 69


state 178
	boolean_expr_list : boolean_expr_list MK_COMMA boolean_expr .  (78)
	boolean_expr : boolean_expr . OP_OR boolean_term  (80)

	OP_OR  shift 123
	MK_COMMA  reduce 78
	MK_RPAREN  reduce 78


state 179
	simple_stmt : var_ref $$12 OP_ASSIGN boolean_expr MK_SEMICOLON .  (66)

	.  reduce 66


state 180
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt . END $$8 ID  (33)

	END  shift 187
	.  error


state 181
	for_stmt : FOR ID $$13 OP_ASSIGN int_const TO . int_const DO opt_stmt_list END DO  (74)

	OCTAL_CONST  shift 34
	INT_CONST  shift 35
	.  error

	int_const  goto 188


state 182
	factor : ID $$14 MK_LPAREN opt_boolean_expr_list MK_RPAREN .  (108)

	.  reduce 108


state 183
	factor : OP_SUB ID MK_LPAREN opt_boolean_expr_list MK_RPAREN .  (109)

	.  reduce 109


state 184
	cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE opt_stmt_list . END IF  (70)

	END  shift 189
	.  error


state 185
	cond_stmt : IF boolean_expr THEN opt_stmt_list END IF .  (71)

	.  reduce 71


state 186
	while_stmt : WHILE boolean_expr DO opt_stmt_list END DO .  (72)

	.  reduce 72


state 187
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt END . $$8 ID  (33)
	$$8 : .  (32)

	.  reduce 32

	$$8  goto 190


state 188
	for_stmt : FOR ID $$13 OP_ASSIGN int_const TO int_const . DO opt_stmt_list END DO  (74)

	DO  shift 191
	.  error


state 189
	cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE opt_stmt_list END . IF  (70)

	IF  shift 192
	.  error


state 190
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt END $$8 . ID  (33)

	ID  shift 193
	.  error


state 191
	for_stmt : FOR ID $$13 OP_ASSIGN int_const TO int_const DO . opt_stmt_list END DO  (74)
	opt_stmt_list : .  (62)

	BEG  shift 23
	FOR  shift 64
	IF  shift 65
	PRINT  shift 66
	READ  shift 67
	RETURN  shift 68
	WHILE  shift 69
	ID  shift 70
	END  reduce 62

	var_ref  goto 71
	compound_stmt  goto 72
	stmt  goto 73
	simple_stmt  goto 74
	cond_stmt  goto 75
	while_stmt  goto 76
	for_stmt  goto 77
	return_stmt  goto 78
	proc_call_stmt  goto 79
	opt_stmt_list  goto 194
	stmt_list  goto 81


state 192
	cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE opt_stmt_list END IF .  (70)

	.  reduce 70


state 193
	func_decl : ID $$5 MK_LPAREN opt_param_list MK_RPAREN $$6 opt_type MK_SEMICOLON $$7 compound_stmt END $$8 ID .  (33)

	.  reduce 33


state 194
	for_stmt : FOR ID $$13 OP_ASSIGN int_const TO int_const DO opt_stmt_list . END DO  (74)

	END  shift 195
	.  error


state 195
	for_stmt : FOR ID $$13 OP_ASSIGN int_const TO int_const DO opt_stmt_list END . DO  (74)

	DO  shift 196
	.  error


state 196
	for_stmt : FOR ID $$13 OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO .  (74)

	.  reduce 74


52 terminals, 57 nonterminals
114 grammar rules, 197 states
